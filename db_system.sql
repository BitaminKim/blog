/*
Navicat MySQL Data Transfer

Source Server         : 47.106.11.74_3306
Source Server Version : 50719
Source Host           : 47.106.11.74:3306
Source Database       : db_system

Target Server Type    : MYSQL
Target Server Version : 50719
File Encoding         : 65001

Date: 2018-05-06 23:04:24
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for tb_blog_article
-- ----------------------------
DROP TABLE IF EXISTS `tb_blog_article`;
CREATE TABLE `tb_blog_article` (
  `id` varchar(32) COLLATE utf8_unicode_ci NOT NULL,
  `title` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `summary` text COLLATE utf8_unicode_ci,
  `content` longtext COLLATE utf8_unicode_ci,
  `label_id` varchar(512) COLLATE utf8_unicode_ci DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `is_public` int(11) DEFAULT NULL,
  `thumb_pic` varchar(512) COLLATE utf8_unicode_ci DEFAULT NULL,
  `is_top` int(11) DEFAULT '0',
  `create_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `create_user` int(11) DEFAULT NULL,
  `check_user` int(11) DEFAULT NULL,
  `read_count` int(11) DEFAULT '0',
  `praise` int(11) DEFAULT '0',
  `is_comment` int(11) DEFAULT '0',
  `category_id` int(11) DEFAULT NULL,
  `is_original` int(11) DEFAULT NULL,
  `source_url` varchar(512) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of tb_blog_article
-- ----------------------------
INSERT INTO `tb_blog_article` VALUES ('1523865189523', '哈登44+8卡佩拉24+12 火箭险胜森林狼总分1-0', '腾讯体育讯 北京时间4月16日，火箭季后赛首战，主场104-101击败森林狼，系列赛总分1-0领先。哈登贡献44分8助攻，卡佩拉24分12篮板；森林狼的巴特勒、唐斯和维金斯三人合计只得到39分。值得一提的是，这是哈登火箭生涯第2次在季后赛单场砍下至少40分+8个助攻，上一次是2015年4月25日打独行侠，当时他拿到42分、9助攻。哈登是火箭队史第一个在季后赛2次单场砍下至少40分+8助攻的球员，奥拉朱旺、斯利普-弗洛伊德都只在季后赛打出过1次。数据方面，森林狼的巴特勒13分5篮板3助攻，维金斯18分，唐斯8分12篮板，火箭的哈登44分4篮板8助攻，卡佩拉24分12篮板，保罗14分4助攻6失误。...', '<p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">腾讯体育讯 北京时间4月16日，火箭季后赛首战，主场104-101击败森林狼，系列赛总分1-0领先。哈登贡献44分8助攻，卡佩拉24分12篮板；森林狼的巴特勒、唐斯和维金斯三人合计只得到39分。<a href=\"http://sports.qq.com/a/20180416/013131.htm\" style=\"margin: 0px; padding: 0px; text-decoration-line: none; outline: 0px; color: rgb(0, 0, 0); border-bottom: 1px dotted rgb(83, 109, 166);\"></a><a href=\"http://sports.qq.com/a/20180416/013131.htm\" style=\"margin: 0px; padding: 0px; text-decoration-line: none; outline: 0px; color: rgb(0, 0, 0); border-bottom: 1px dotted rgb(83, 109, 166);\"></a></p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">值得一提的是，这是哈登火箭生涯第2次在季后赛单场砍下至少40分+8个助攻，上一次是2015年4月25日打独行侠，当时他拿到42分、9助攻。哈登是火箭队史第一个在季后赛2次单场砍下至少40分+8助攻的球员，奥拉朱旺、斯利普-弗洛伊德都只在季后赛打出过1次。</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">数据方面，森林狼的巴特勒13分5篮板3助攻，维金斯18分，唐斯8分12篮板，火箭的哈登44分4篮板8助攻，卡佩拉24分12篮板，保罗14分4助攻6失误。</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\"><br/></p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\"><strong style=\"margin: 0px; padding: 0px;\">本场之星：詹姆斯-哈登</strong></p><p style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\"><br/></p><p style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://inews.gtimg.com/newsapp_bt/0/3280218509/641\"/></p><p class=\"text image_desc\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">哈登带队取胜</p><p style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">哈登全场轰下44分，是火箭拿下首胜的第一功臣。本场比赛除了哈登，火箭其他球员的三分命中率相当糟糕。哈登三分球12投7中，而其他人只有25投3中的表现。特别是在关键的第四节，哈登轰下13分，为获胜奠定基础。</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\"><br/></p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\"><strong style=\"margin: 0px; padding: 0px;\">比赛回顾</strong></p><p style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">比赛开始后，哈登一记击地妙传给到阿里扎，阿里扎上篮为火箭拿下今年季后赛的第一分。很快，哈登又助攻卡佩拉，空接上篮得手，火箭打出4-0的开局。森林狼的维金斯内线抛投，回敬两分。哈登再次和卡佩拉完成空接配合，卡佩拉双手轻松暴扣，开场不到4分钟，卡佩拉已经得到6分。把队友喂饱，哈登才开始自己的进攻，三分线外张手命中后，又连续罚进两球。哈登罚球时，场边已经响起了MVP的喊声。卡佩拉快攻造成对手犯规，两罚两中，双方的分差已经来到11分。卡佩拉正面大帽唐斯，随后又在快速反击时扣篮得分。第一节打到一半，卡佩拉已经轰下10分。维金斯和吉布森连续中投得分，为森林狼止血，唐斯连投带罚，森林狼开始起势。反观火箭，命中率明显下降，特别是三分线外频频打铁。克劳福德两罚两中，吉昂连投带罚，一波15-4的高潮过后，森林狼将比分追成了21平。第一节结束前，保罗连得4分，随后又助攻内内上篮得分。短短46秒，火箭轰出一波6-0，以27-21领先森林狼结束首节。第一节，森林狼的维金斯得到8分，火箭的卡佩拉10分5篮板，哈登7分3助攻。这一节比赛，双方三分手感都很糟糕，火箭9投2中，森林狼5投0中。</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\"><br/></p><p style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://inews.gtimg.com/newsapp_bt/0/3280280284/641\"/></p><p class=\"text image_desc\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">卡佩拉唐斯内线对决</p><p style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">次节，巴特勒连得4分，克劳福德上篮得手，森林狼一波6-2，缩小分差。保罗助攻内内打成2+1，罗斯很快就还以颜色，接巴特勒击地传球，也打成2+1。克劳福德三分命中，森林狼反超比分，卡佩拉连得4分，帮火箭稳住阵脚。吉布森勾手得分，第二节打了一半，森林狼以38-36领先火箭两分。火箭开始反攻，哈登两罚两中，卡佩拉空接暴扣后，又上演了一次欧洲步上篮。哈登连续两次后撤步三分命中，火箭将领先优势拉开到两位数。外线打开后，哈登也加强了自己的突破，一记轻松的上篮，如入无人之境。巴特勒三罚三中，将分差拉回到个位数，半场战罢，火箭54-47领先森林狼。火箭第二节的最后22分，都是由哈登或卡佩拉得到的。</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">上半场，森林狼的巴特勒10分4篮板，罗斯9分，维金斯8分3篮板，唐斯发挥有些失常，得到3分5篮板2助攻。火箭的卡佩拉20分10篮板2盖帽，20分也创下了卡佩拉生涯半场得分纪录，哈登19分2篮板5助攻，保罗6分2助攻。</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">易边再战，维金斯单打完成2+1，吉布森也打成2+1，分差只剩下1分，火箭整整两分钟没有得分，阿里扎好不容易造成对手犯规，竟两罚不中。巴特勒三分命中，塔克回敬一记三分。维金斯再进一记三分，森林狼反超比分。阿里扎两罚一中，蒂格也在三分线外跳投命中，森林狼将分差拉开到4分。关键时刻，保罗抛投命中止血。森林狼的攻势已经起来，罗斯、唐斯接连得分，但火箭也找到了手感，格林跳投命中，哈登后撤步三分，还造成对方犯规，打成3+1。随着卡佩拉暴扣得分，火箭打出一波10-3的小高潮，反超森林狼3分，对手被迫叫停。罗斯上场连得5分，再次帮助森林狼反超，哈登也不遑多让，一记突破飞扣扳平比分。唐斯中投命中，森林狼领先两分，哈登再显巨星本色，先是一记后撤步三分，将比分反超，随后又是突然启动，杀入篮下打成2+1。凭借哈登的出色表现，火箭76-72领先森林狼，结束第三节比赛。三节战罢，哈登已经砍下31分3篮板6助攻，三分球8投5中，火箭其余球员的三分球只有21投2中。</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\"><br/></p><p style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://inews.gtimg.com/newsapp_bt/0/3280096135/641\"/></p><p class=\"text image_desc\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">哈登末节表现神勇</p><p style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">末节，双方展开激烈的对攻。戈登三分命中，克劳福德回敬一记远投。保罗投进一记中投，蒂格也马上还一记上篮。吉昂跳投得分，格林跑投命中。克劳福德开始发威，进攻时间快到时，他命中了一记超远三分，森林狼士气大振。双方分差只剩1分，火箭依然频频打铁，克劳福德两罚两中，戈登回敬两分，分差回到1分。这时候，哈登再次爆发，后撤步三分屡屡命中，一人连得12分，火箭的领先优势一下子来到9分。哈登霸气地连连摇头，确实，谁能抵挡如此强硬的哈登？森林狼也不放弃，维金斯和蒂格接连得分，保持对火箭的压力。终场前26.3秒，蒂格两罚命中，分差只剩下3分，森林狼只能使用犯规战术，保罗两罚两中，唐斯打成两分。火箭出现失误，留给森林狼8.7秒。巴特勒三分不中，火箭以104-101险胜森林狼。</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\"><br/></p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\"><strong style=\"margin: 0px; padding: 0px;\">比赛花絮</strong></p><p style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">终场前1分30秒，哈登获得两次罚球机会，当他罚进一球后，森林狼请求暂停，暂停回来，哈登第二球没有罚进，唐斯拿到篮板，显然忘了这是第二个罚球，还走了两步和裁判交流。火箭球员和教练大喊“走步！”，但裁判并没有吹罚，罗斯利用火箭球员抱怨裁判的机会，助攻维金斯扣篮得分，将分差缩小到5分。</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\"><br/></p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\"><strong style=\"margin: 0px; padding: 0px;\">双方首发阵容</strong></p><p style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">森林狼：蒂格、巴特勒、维金斯、吉布森、唐斯</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">火箭：保罗、哈登、阿里扎、塔克、卡佩拉</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">（罗罗）</p><p><br/></p>', '15,20', '1', '1', '/resource/blog/article/2018-04-16/3d87a419d08f42eb894277d9db717280.jpg', '0', '2018-04-16 15:53:09', '2018-04-17 08:43:23', '1', null, '6', '0', '1', '33', '0', 'http://sports.qq.com/a/20180417/002832.htm');
INSERT INTO `tb_blog_article` VALUES ('1523865462404', '林书豪预测火箭西决不敌勇士 金州将蝉联总冠军', '腾讯体育4月16日讯 篮网球员林书豪今天在社交媒体上晒出一张他对今年NBA季后赛走势的预测图，林书豪看好火箭和勇士今年会师西部决赛，但他预测火箭将在西部决赛中输给勇士，勇士将与骑士再度会师总决赛，而最后夺冠的将会是勇士队。林书豪今天在社交媒体上@腾讯体育解说员王猛并写道：“刚看完今天的比赛，我还是觉得我选的是对的！你们觉得呢？王猛，来看看！”林书豪随后晒出一张今年NBA季后赛走势预测图。对于西部联盟的季后赛首轮对决，林书豪认为火箭将以4-2淘汰森林狼，雷霆将以4-2击败爵士。开拓者虽然首仗输给鹈鹕，但林书豪还是看好开拓者队最终以4-3涉险过关。对于勇士与马刺的较量，林书豪认为是西部首轮实力最为...', '<p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">腾讯体育4月16日讯 篮网球员林书豪今天在社交媒体上晒出一张他对今年NBA季后赛走势的预测图，林书豪看好火箭和勇士今年会师西部决赛，但他预测火箭将在西部决赛中输给勇士，勇士将与骑士再度会师总决赛，而最后夺冠的将会是勇士队。</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">林书豪今天在社交媒体上@腾讯体育解说员王猛并写道：“刚看完今天的比赛，我还是觉得我选的是对的！你们觉得呢？王猛，来看看！”林书豪随后晒出一张今年NBA季后赛走势预测图。</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\"><br/></p><p style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://inews.gtimg.com/newsapp_bt/0/2829903596/641\"/></p><p style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">对于西部联盟的季后赛首轮对决，林书豪认为火箭将以4-2淘汰森林狼，雷霆将以4-2击败爵士。开拓者虽然首仗输给鹈鹕，但林书豪还是看好开拓者队最终以4-3涉险过关。对于勇士与马刺的较量，林书豪认为是西部首轮实力最为悬殊的一组对决，他看好勇士以4-1轻松过关。</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">对于西部季后赛第二轮，林书豪认为火箭碰上雷霆之后将会以和首轮一样的4-2总比分淘汰雷霆，同时勇士队在西部半决赛与开拓者遭遇也仍然拥有相当明显的优势，勇士队将以4-1顺利过关。一旦火箭与勇士会师西部决赛，林书豪认为勇士队将以4-2的总比分胜出。</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\"><br/></p><p style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://inews.gtimg.com/newsapp_bt/0/3282150696/641\"/></p><p class=\"text image_desc\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">林书豪的季后赛预测</p><p style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">对于东部态势，林书豪看好首轮猛龙以4-2击败奇才、骑士4-1淘汰步行者、76人4-3淘汰热火、凯尔特人4-2淘汰雄鹿。对于东部第二轮，林书豪认为骑士将以4-2跨过猛龙、凯尔特人以4-2击败76人。凯尔特人将与骑士会师东部决赛，然后骑士将会在东部决赛当中以4-2击败绿衫军。</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">对于总决赛的预测，林书豪依然看好勇士队，而且他认为勇士队将以4-1的总比分轻松拿下骑士，蝉联总冠军。林书豪还预测了今天总决赛的MVP将会是凯文-杜兰特。</p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 28px; padding: 0px; word-wrap: break-word; font-family: &quot;Microsoft Yahei&quot;, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em;\">（伟衡</p><p><br/></p>', '15,20,21', '1', '1', '/resource/blog/article/2018-04-16/a7a923eca31f464092b0731034daec57.jpg', '0', '2018-04-16 15:57:42', '2018-04-26 09:18:46', '1', null, '12', '0', '1', '33', '0', 'http://sports.qq.com/a/20180417/002832.htm');
INSERT INTO `tb_blog_article` VALUES ('1523865597959', 'Java语言概述', 'Java语言是SUN(Stanford University Network，斯坦福大学网络公司)公司1995年推出的一门高级编程语言，起初主要应用在小型消费电子产品上，后来随着互联网的兴起，Java语言迅速崛起（Java applet 可以在浏览器中运行），成为大型互联网项目的首选语言。2009年04月20日，美国甲骨文公司74亿美元收购Sun，取得java的版权。Java 是面向对象的语言，没有面向对象编程经验的读者需要花费不少时间来了解面向对象的概念、语法和编程思想，有不能理解的地方请大家一定要坚持，多花时间编写代码自然会豁然开朗，从面向过程到面相对象需要一个适应期。Java 不只是一种...', '<p><span style=\"color: rgb(51, 51, 51); font-family: &quot;Microsoft Yahei&quot;, Arial, Helvetica, sans-serif; font-size: 14px; background-color: rgb(238, 238, 238);\">Java语言是SUN(Stanford University Network，斯坦福大学网络公司)公司1995年推出的一门高级编程语言，起初主要应用在小型消费电子产品上，</span><span style=\"font-family: &quot;Microsoft Yahei&quot;, Arial, Helvetica, sans-serif; font-size: 14px; background-color: rgb(238, 238, 238); color: rgb(178, 34, 34);\">后来随着互联网的兴起，Java语言迅速崛起（Java applet 可以在浏览器中运行），成为大型互联网项目的首选语言</span><span style=\"color: rgb(51, 51, 51); font-family: &quot;Microsoft Yahei&quot;, Arial, Helvetica, sans-serif; font-size: 14px; background-color: rgb(238, 238, 238);\">。</span><br/><br/><span style=\"color: rgb(51, 51, 51); font-family: &quot;Microsoft Yahei&quot;, Arial, Helvetica, sans-serif; font-size: 14px; background-color: rgb(238, 238, 238);\">2009年04月20日，美国甲骨文公司74亿美元收购Sun，取得java的版权。</span><br/><br/><span style=\"color: rgb(51, 51, 51); font-family: &quot;Microsoft Yahei&quot;, Arial, Helvetica, sans-serif; font-size: 14px; background-color: rgb(238, 238, 238);\">Java 是面向对象的语言，没有面向对象编程经验的读者需要花费不少时间来了解面向对象的概念、语法和编程思想，有不能理解的地方请大家一定要坚持，多花时间编写代码自然会豁然开朗，从面向过程到面相对象需要一个适应期。</span><br/><br/><span style=\"color: rgb(51, 51, 51); font-family: &quot;Microsoft Yahei&quot;, Arial, Helvetica, sans-serif; font-size: 14px; background-color: rgb(238, 238, 238);\">Java 不只是一种编程语言，它是一个完整的平台，拥有庞大的库，将诸如图形绘制、Socket连接、数据库存取等复杂操作进行了最大程度的简化。</span><br/><br/><span style=\"color: rgb(51, 51, 51); font-family: &quot;Microsoft Yahei&quot;, Arial, Helvetica, sans-serif; font-size: 14px; background-color: rgb(238, 238, 238);\">Java 是跨平台的，一次编译，到处运行，在 Windows 上编写的代码可以不加修改的移植到 Linux 上，反之也可以。</span><br/><br/><span style=\"color: rgb(51, 51, 51); font-family: &quot;Microsoft Yahei&quot;, Arial, Helvetica, sans-serif; font-size: 14px; background-color: rgb(238, 238, 238);\">在世界编程语言排行榜中，Java几乎占据着第二名的位置，仅次于C语言。</span></p><p><img alt=\"\" src=\"http://www.weixueyuan.net/uploads/allimg/141123/1-141123214P3C4.png\"/><br/>图1 &nbsp;世界编程语言排行榜（2014年11月）</p><p><br/><span style=\"color: rgb(51, 51, 51); font-family: &quot;Microsoft Yahei&quot;, Arial, Helvetica, sans-serif; font-size: 14px; background-color: rgb(238, 238, 238);\">Java是典型的面向对象的语言，晚于C++发布，部分语法和思想也参考了C++，请见下表：</span><br/></p><table><tbody><tr class=\"firstRow\"><th style=\"padding: 7px 5px; border-color: rgb(204, 204, 204); background-color: rgb(237, 237, 237); color: rgb(68, 68, 68);\">语言</th><th style=\"padding: 7px 5px; border-color: rgb(204, 204, 204); background-color: rgb(237, 237, 237); color: rgb(68, 68, 68);\">生日</th></tr><tr><td style=\"padding-right: 5px; padding-left: 5px; border-color: rgb(204, 204, 204);\">C语言</td><td style=\"padding-right: 5px; padding-left: 5px; border-color: rgb(204, 204, 204);\">19世纪70年代初问世，1978年美国电话电报公司(AT&amp;T)贝尔实验室正式发布C语言。</td></tr><tr><td style=\"padding-right: 5px; padding-left: 5px; border-color: rgb(204, 204, 204);\">C++</td><td style=\"padding-right: 5px; padding-left: 5px; border-color: rgb(204, 204, 204);\">在C基础上，1983年贝尔实验室推出了C++。</td></tr><tr><td style=\"padding-right: 5px; padding-left: 5px; border-color: rgb(204, 204, 204);\">Java</td><td style=\"padding-right: 5px; padding-left: 5px; border-color: rgb(204, 204, 204);\">由Sun公司于1995年5月推出。</td></tr><tr><td style=\"padding-right: 5px; padding-left: 5px; border-color: rgb(204, 204, 204);\">Python</td><td style=\"padding-right: 5px; padding-left: 5px; border-color: rgb(204, 204, 204);\">由Guido van Rossum于1989年底发明，第一个公开发行版发行于1991年。</td></tr><tr><td style=\"padding-right: 5px; padding-left: 5px; border-color: rgb(204, 204, 204);\">Ruby</td><td style=\"padding-right: 5px; padding-left: 5px; border-color: rgb(204, 204, 204);\">在20世纪90年代由日本人松本行弘开发。</td></tr></tbody></table><p><br/><span style=\"color: rgb(51, 51, 51); font-family: &quot;Microsoft Yahei&quot;, Arial, Helvetica, sans-serif; font-size: 14px; background-color: rgb(238, 238, 238);\">尽管人们发现C++的语法太复杂，有很多冗余，但是 Java 在设计的时候还是尽可能的接近C++，降低人们的学习成本。Java 语法是 C++ 语法的一个“纯净”版，没有头文件、指针运算（也没有指针语法）、结构、联合、运算符重载、虚基类等。有C++基础的读者，可以轻易地切换到Java。</span><br/><br/><span style=\"color: rgb(51, 51, 51); font-family: &quot;Microsoft Yahei&quot;, Arial, Helvetica, sans-serif; font-size: 14px; background-color: rgb(238, 238, 238);\">Java 的应用非常广泛：</span></p><ul style=\"list-style-position: initial; list-style-image: initial; padding-left: 20px; color: rgb(51, 51, 51); font-family: &quot;Microsoft Yahei&quot;, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(238, 238, 238);\" class=\" list-paddingleft-2\"><li><p>Web开发：Java非常适合开发大型的企业网站，例如人人网、去哪儿网的后台都是Java。</p></li><li><p>Android开发：Android手机上APP几乎都是用Java开发的，例如QQ、微信、UC浏览器。</p></li><li><p>客户端开发：Java也可以用来开发电脑上的软件，例如Elicpse、Netbeans。</p></li><li><p>嵌入式应用：嵌入式应用就是在小型电子产品中运行的软件，例如老式手机上的软件、MP3上的软件。</p></li></ul><p><br/><span style=\"font-family: &quot;Microsoft Yahei&quot;, Arial, Helvetica, sans-serif; font-size: 14px; background-color: rgb(238, 238, 238); color: rgb(178, 34, 34);\">但是，可以负责任的告诉你，Java 目前的主要应用方向是Web开发和Android开发，大部分IT公司招聘的Java程序员也是从事这两方面的工作。</span><br/><br/><span style=\"color: rgb(51, 51, 51); font-family: &quot;Microsoft Yahei&quot;, Arial, Helvetica, sans-serif; font-size: 14px; background-color: rgb(238, 238, 238);\">Java 的GUI库称不上出色，很多用户不习惯它的界面；Java编写的客户端资源消耗也比较多；更重要的是，Java程序必须借助虚拟机才能运行，操作系统默认没有安装虚拟机（下节将会详细介绍）。直接投放市场的面向普通用户的客户端程序，用Java开发的很少。</span><br/><br/><span style=\"color: rgb(51, 51, 51); font-family: &quot;Microsoft Yahei&quot;, Arial, Helvetica, sans-serif; font-size: 14px; background-color: rgb(238, 238, 238);\">在嵌入式方面，Java 很难操作底层硬件，灵活性较小，而且需要虚拟机支持，占用资源较多，对于配置很低的单片机系统来说有些吃力。所以，在力求高效、小型化、执行关键任务的应用中，最好采用汇编和C语言，例如火箭控制、传感器通信或报告宇宙飞行器的方位等。</span><br/><br/><span style=\"color: rgb(51, 51, 51); font-family: &quot;Microsoft Yahei&quot;, Arial, Helvetica, sans-serif; font-size: 14px; background-color: rgb(238, 238, 238);\">Java 虽然是一门功能完善的语言，但是它有自己擅长的方面，也有不擅长的方面，大家在具体项目中要学会取舍。</span></p><p><br/></p>', '16,19,21', '1', '1', '/resource/blog/article/2018-04-16/7a8a1853eec742b783f7db84c2f8ffb9.png', '0', '2018-04-16 15:59:57', '2018-04-17 21:44:16', '1', null, '9', '0', '1', '28', '0', 'http://www.weixueyuan.net/view/5939.html');
INSERT INTO `tb_blog_article` VALUES ('1523866006209', 'java反射入门', '反射是框架设计的灵魂（使用的前提条件：必须先得到代表的字节码的Class，Class类用于表示.class文件（字节码））一、反射的概述JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。要想解剖一个类,必须先要获取到该类的字节码文件对象。而解剖使用的就是Class类中的方法.所以先要获取到每一个字节码文件对应的Class类型的对象.以上的总结就是什么是反射反射就是把java类中的各种成分映射成一个个的Java对象例如：一个类有：成员变量、...', '<h1 style=\"margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(69, 69, 69); font-weight: 400; font-size: 28px; line-height: 36px; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(255, 0, 0);\">反射是框架设计的灵魂</span></h1><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px; color: rgb(255, 0, 0);\"><span style=\"box-sizing: border-box; font-weight: 700;\">（使用的前提条件：必须先得到代表的字节码的Class，Class类用于表示.class文件（字节码））</span></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px; color: rgb(255, 0, 0);\"><span style=\"box-sizing: border-box; font-weight: 700;\"><br/></span></span></p><h1 style=\"margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(69, 69, 69); font-weight: 400; font-size: 28px; line-height: 36px; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(12, 137, 207);\"></a><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(66, 139, 202); outline: 0px; margin: 0px; padding: 0px;\"></a>一、反射的概述</h1><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span>JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。</span><br/></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span>要想解剖一个类,必须先要获取到该类的字节码文件对象。而解剖使用的就是Class类中的方法.所以先要获取到每一个字节码文件对应的Class类型的对象.<br/></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><br/></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><br/></span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\"><span style=\"box-sizing: border-box; font-weight: 400; margin: 0px; padding: 0px; font-size: 24px;\">以上的总结就是什么是反射</span></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 24px; color: rgb(255, 0, 0);\">反射就是把java类中的各种成分映射成一个个的Java对象</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">例如：一个类有：成员变量、方法、构造方法、包等等信息，利用反射技术可以对一个类进行解剖，把个个组成部分映射成一个个对象。</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">&nbsp; &nbsp; &nbsp;（其实：一个类中这些成员方法、构造方法、在加入类中都有一个类来描述）</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">如图是类的正常加载过程：反射的原理在与class对象。</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">熟悉一下加载的时候：<span style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(255, 0, 0);\">Class对象的由来是将class文件读入内存，并为之创建一个Class对象。</span></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(255, 0, 0);\"><br/></span></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><img src=\"http://img.blog.csdn.net/20170513133210763\" alt=\"\"/><br/></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">其中这个Class对象很特殊。我们先了解一下这个C</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">lass类</span></p><h1 style=\"margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(69, 69, 69); font-weight: 400; font-size: 28px; line-height: 36px; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(12, 137, 207);\"></a><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(66, 139, 202); outline: 0px; margin: 0px; padding: 0px;\"></a><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 24px;\">二、查看Class类在java中的api详解（1.7的API</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 24px;\">）</span></h1><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">如何阅读java中的api详见java基础之——String字符串处理</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><br/></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><img src=\"http://img.blog.csdn.net/20170513135521667\" alt=\"\"/><br/></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><code style=\"box-sizing: border-box; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">Class</code>&nbsp;类的实例表示正在运行的 Java 应用程序中的类和接口。也就是jvm中有N多的实例每个类都有该Class对象。（包括基本数据类型）</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><code style=\"box-sizing: border-box; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">Class</code>&nbsp;没有公共构造方法。<code style=\"box-sizing: border-box; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">Class</code>&nbsp;对象是在加载类时由 Java 虚拟机以及通过调用类加载器中的<code style=\"box-sizing: border-box; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">defineClass</code>方法自动构造的。也就是这不需要我们自己去处理创建，JVM已经帮我们创建好了。<br/></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">没有公共的构造方法，方法共有64个太多了。下面用到哪个就详解哪个吧</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><br/></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><img src=\"http://img.blog.csdn.net/20170513144141409\" alt=\"\"/><br/></span></p><h1 style=\"margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(69, 69, 69); font-weight: 400; font-size: 28px; line-height: 36px; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(12, 137, 207);\"></a><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(66, 139, 202); outline: 0px; margin: 0px; padding: 0px;\"></a><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 24px;\">三、反射的使用（这里使用Student类做演示）</span></h1><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 24px;\">先写一个Student类。</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 24px;\"><br/></span></p><h2 style=\"margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(69, 69, 69); font-weight: 400; font-size: 24px; line-height: 32px; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(12, 137, 207);\"></a><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(66, 139, 202); outline: 0px; margin: 0px; padding: 0px;\"></a><span style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">1、获取Class对象的三种方式</span></h2><h3 style=\"margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(69, 69, 69); font-weight: 400; font-size: 22px; line-height: 30px; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(12, 137, 207);\"></a><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(66, 139, 202); outline: 0px; margin: 0px; padding: 0px;\"></a><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 24px;\">1.1 Object ——&gt; getClass();<br/></span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 24px;\">1.2 任何数据类型（包括基本数据类型）都有一个“静态”的class属性<br/></span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 24px;\">1.3 通过Class类的静态方法：forName（String &nbsp;className）(常用)</span></h3><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 24px;\">其中1.1是因为Object类中的getClass方法、因为所有类都继承Object类。从而调用Object类来获取</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 24px;\"><img src=\"http://img.blog.csdn.net/20170513145317647\" alt=\"\"/></span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&lt;span&nbsp;style=</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;font-size:18px;&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&gt;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">package</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">/**</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;获取Class对象的三种方式</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;1&nbsp;Object&nbsp;——&gt;&nbsp;getClass();</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;2&nbsp;任何数据类型（包括基本数据类型）都有一个“静态”的class属性</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;3&nbsp;通过Class类的静态方法：forName（String&nbsp;&nbsp;className）(常用)</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*/</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Fanshe&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">static</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;main(String[]&nbsp;args)&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//第一种方式获取Class对象&nbsp;&nbsp;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Student&nbsp;stu1&nbsp;=&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">new</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Student();</span><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//这一new&nbsp;产生一个Student对象，一个Class对象。</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class&nbsp;stuClass&nbsp;=&nbsp;stu1.getClass();<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//获取Class对象</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(stuClass.getName());&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//第二种方式获取Class对象</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class&nbsp;stuClass2&nbsp;=&nbsp;Student.<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(stuClass&nbsp;==&nbsp;stuClass2);<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//判断第一种方式获取的Class对象和第二种方式获取的是否是同一个</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//第三种方式获取Class对象</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">try</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class&nbsp;stuClass3&nbsp;=&nbsp;Class.forName(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;fanshe.Student&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);</span><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//注意此字符串必须是真实路径，就是带包名的类路径，包名.类名</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(stuClass3&nbsp;==&nbsp;stuClass2);<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//判断三种方式是否获取的是同一个Class对象</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">catch</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;(ClassNotFoundException&nbsp;e)&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">}&lt;/span&gt;&nbsp;&nbsp;</span></p></li></ol><h2 style=\"margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-weight: 400; font-size: 24px; line-height: 32px;\"><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(12, 137, 207);\"></a><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(66, 139, 202); outline: 0px; margin: 0px; padding: 0px;\"></a><span style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">注意：在运行期间，一个类，只有一个Class对象产生。<br/></span></h2><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 24px;\">三种方式常用第三种，第一种对象都有了还要反射干什么。第二种需要导入类的包，依赖太强，不导包就抛编译错误。一般都第三种，一个字符串可以传入也可写在配置文件中等多种方法。</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 24px;\"><br/></span></p><h2 style=\"margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-weight: 400; font-size: 24px; line-height: 32px;\"><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(12, 137, 207);\"></a><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(66, 139, 202); outline: 0px; margin: 0px; padding: 0px;\"></a><span style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">2、通过反射获取构造方法并使用：</span></h2><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">student类：</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"></span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">package</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Student&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//---------------构造方法-------------------</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//（默认的构造方法）</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;Student(String&nbsp;str){&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;(默认)的构造方法&nbsp;s&nbsp;=&nbsp;&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;str);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//无参构造方法</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Student(){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;调用了公有、无参构造方法执行了。。。&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//有一个参数的构造方法</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Student(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">char</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;name){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;姓名：&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;name);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//有多个参数的构造方法</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Student(String&nbsp;name&nbsp;,</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;age){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;姓名：&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">+name+</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;年龄：&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">+&nbsp;age);</span><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//这的执行效率有问题，以后解决。</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//受保护的构造方法</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">protected</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Student(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">boolean</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;n){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;受保护的构造方法&nbsp;n&nbsp;=&nbsp;&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;n);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//私有构造方法</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">private</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Student(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;age){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;私有的构造方法&nbsp;&nbsp;&nbsp;年龄：&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">+&nbsp;age);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">}&nbsp;&nbsp;</span></p></li></ol><p><br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">共有6个构造方法；</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><br/></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">测试类：</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"></span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">package</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">import</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.reflect.Constructor;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">/*</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;通过Class对象可以获取某个类中的：构造方法、成员变量、成员方法；并访问成员；</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;1.获取构造方法：</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1).批量的方法：</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Constructor[]&nbsp;getConstructors()：所有&quot;公有的&quot;构造方法</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Constructor[]&nbsp;getDeclaredConstructors()：获取所有的构造方法(包括私有、受保护、默认、公有)</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2).获取单个的方法，并调用：</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Constructor&nbsp;getConstructor(Class...&nbsp;parameterTypes):获取单个的&quot;公有的&quot;构造方法：</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Constructor&nbsp;getDeclaredConstructor(Class...&nbsp;parameterTypes):获取&quot;某个构造方法&quot;可以是私有的，或受保护、默认、公有；</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;调用构造方法：</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor--&gt;newInstance(Object...&nbsp;initargs)</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*/</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Constructors&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">static</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;main(String[]&nbsp;args)&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">throws</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Exception&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//1.加载Class对象</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class&nbsp;clazz&nbsp;=&nbsp;Class.forName(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;fanshe.Student&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//2.获取所有公有构造方法</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;**********************所有公有构造方法*********************************&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor[]&nbsp;conArray&nbsp;=&nbsp;clazz.getConstructors();&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">for</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">(Constructor&nbsp;c&nbsp;:&nbsp;conArray){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(c);&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;************所有的构造方法(包括：私有、受保护、默认、公有)***************&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;conArray&nbsp;=&nbsp;clazz.getDeclaredConstructors();&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">for</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">(Constructor&nbsp;c&nbsp;:&nbsp;conArray){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(c);&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;*****************获取公有、无参的构造方法*******************************&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor&nbsp;con&nbsp;=&nbsp;clazz.getConstructor(<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">null</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//1&gt;、因为是无参的构造方法所以类型是一个null,不写也可以：这里需要的是一个参数的类型，切记是类型</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//2&gt;、返回的是描述这个无参构造函数的类对象。</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;con&nbsp;=&nbsp;&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;con);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//调用构造方法</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object&nbsp;obj&nbsp;=&nbsp;con.newInstance();&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//&nbsp;&nbsp;System.out.println(&quot;obj&nbsp;=&nbsp;&quot;&nbsp;+&nbsp;obj);</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//&nbsp;&nbsp;Student&nbsp;stu&nbsp;=&nbsp;(Student)obj;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;******************获取私有构造方法，并调用*******************************&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;con&nbsp;=&nbsp;clazz.getDeclaredConstructor(<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">char</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">.</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(con);&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//调用构造方法</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;con.setAccessible(<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">true</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);</span><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//暴力访问(忽略掉访问修饰符)</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj&nbsp;=&nbsp;con.newInstance(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&#39;男&#39;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">}&nbsp;&nbsp;</span></p></li></ol><p>后台输出：</p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">**********************所有公有构造方法*********************************&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.Student(java.lang.String,</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.Student(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">char</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.Student()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">************所有的构造方法(包括：私有、受保护、默认、公有)***************&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">private</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.Student(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">protected</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.Student(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">boolean</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.Student(java.lang.String,</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.Student(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">char</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.Student()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">fanshe.Student(java.lang.String)&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">*****************获取公有、无参的构造方法*******************************&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">con&nbsp;=&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.Student()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">调用了公有、无参构造方法执行了。。。&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">******************获取私有构造方法，并调用*******************************&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.Student(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">char</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">姓名：男&nbsp;&nbsp;</span></p></li></ol><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">调用方法：</span></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">1.获取构造方法：</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">&nbsp;<span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span>1).批量的方法：<br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span>public Constructor[] getConstructors()：所有&quot;公有的&quot;构造方法<br/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"> </span>public Constructor[] getDeclaredConstructors()：获取所有的构造方法(包括私有、受保护、默认、公有)<br/>&nbsp; &nbsp; &nbsp;<br/>&nbsp;<span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"> </span>2).获取单个的方法，并调用：<br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span>public Constructor getConstructor(Class... parameterTypes):获取单个的&quot;公有的&quot;构造方法：<br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span>public Constructor getDeclaredConstructor(Class... parameterTypes):获取&quot;某个构造方法&quot;可以是私有的，或受保护、默认、公有；<br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span><br/>&nbsp;<span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"> </span>调用构造方法：</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span>Constructor--&gt;newInstance(Object... initargs)<br/></span></p><p>2、<span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">newInstance是&nbsp;<span style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">Constructor类的方法（管理构造函数的类）</span></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span>api的解释为：</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><code style=\"box-sizing: border-box; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\"><span style=\"box-sizing: border-box; font-weight: 700;\"><a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078\" style=\"text-decoration-line: none; box-sizing: border-box; color: rgb(202, 12, 22); outline: 0px; margin: 0px; padding: 0px; font-weight: 400;\"><span style=\"box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; white-space: pre;\"></span></a></span></code><span style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span>newInstance(Object... initargs)</span><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"> </span>使用此&nbsp;<code style=\"box-sizing: border-box; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">Constructor</code>&nbsp;对象表示的构造方法来创建该构造方法的声明类的新实例，并用指定的初始化参数初始化该实例。</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span>它的返回值是T类型，所以<span style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">newInstance是创建了一个构造方法的声明类的新实例对象。并为之调用</span></span></p><h2 style=\"margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(69, 69, 69); font-weight: 400; font-size: 24px; line-height: 32px; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(12, 137, 207);\"></a><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(66, 139, 202); outline: 0px; margin: 0px; padding: 0px;\"></a><span style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">3、获取成员变量并调用</span></h2><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">student类：</span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&lt;span&nbsp;style=</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;font-size:14px;&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&gt;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">package</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.field;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Student&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Student(){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//**********字段*************//</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;String&nbsp;name;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">protected</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;age;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">char</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;sex;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">private</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;String&nbsp;phoneNum;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"annotation\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;\">@Override</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;String&nbsp;toString()&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">return</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;Student&nbsp;[name=&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;name&nbsp;+&nbsp;</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;,&nbsp;age=&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;age&nbsp;+&nbsp;</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;,&nbsp;sex=&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;sex&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;,&nbsp;phoneNum=&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;phoneNum&nbsp;+&nbsp;</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;]&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">}&lt;/span&gt;&nbsp;&nbsp;</span></p></li></ol><p><br/><br/></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">测试类：</span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&lt;span&nbsp;style=</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;font-size:14px;&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&gt;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">package</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.field;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">import</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.reflect.Field;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">/*</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;获取成员变量并调用：</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;1.批量的</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1).Field[]&nbsp;getFields():获取所有的&quot;公有字段&quot;</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2).Field[]&nbsp;getDeclaredFields():获取所有字段，包括：私有、受保护、默认、公有；</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;2.获取单个的：</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1).public&nbsp;Field&nbsp;getField(String&nbsp;fieldName):获取某个&quot;公有的&quot;字段；</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2).public&nbsp;Field&nbsp;getDeclaredField(String&nbsp;fieldName):获取某个字段(可以是私有的)</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;设置字段的值：</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;--&gt;&nbsp;public&nbsp;void&nbsp;set(Object&nbsp;obj,Object&nbsp;value):</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;参数说明：</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.obj:要设置的字段所在的对象；</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.value:要为字段设置的值；</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*/</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Fields&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">static</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;main(String[]&nbsp;args)&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">throws</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Exception&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//1.获取Class对象</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class&nbsp;stuClass&nbsp;=&nbsp;Class.forName(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;fanshe.field.Student&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//2.获取字段</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;************获取所有公有的字段********************&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field[]&nbsp;fieldArray&nbsp;=&nbsp;stuClass.getFields();&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">for</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">(Field&nbsp;f&nbsp;:&nbsp;fieldArray){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(f);&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;************获取所有的字段(包括私有、受保护、默认的)********************&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldArray&nbsp;=&nbsp;stuClass.getDeclaredFields();&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">for</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">(Field&nbsp;f&nbsp;:&nbsp;fieldArray){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(f);&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;*************获取公有字段**并调用***********************************&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Field&nbsp;f&nbsp;=&nbsp;stuClass.getField(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;name&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(f);&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//获取一个对象</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object&nbsp;obj&nbsp;=&nbsp;stuClass.getConstructor().newInstance();<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//产生Student对象--》Student&nbsp;stu&nbsp;=&nbsp;new&nbsp;Student();</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//为字段设置值</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.set(obj,&nbsp;<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;刘德华&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);</span><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//为Student对象中的name属性赋值--》stu.name&nbsp;=&nbsp;&quot;刘德华&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//验证</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Student&nbsp;stu&nbsp;=&nbsp;(Student)obj;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;验证姓名：&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;stu.name);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;**************获取私有字段****并调用********************************&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f&nbsp;=&nbsp;stuClass.getDeclaredField(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;phoneNum&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(f);&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.setAccessible(<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">true</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);</span><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//暴力反射，解除私有限定</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.set(obj,&nbsp;<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;18888889999&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;验证电话：&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;stu);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&lt;/span&gt;&lt;span&nbsp;style=<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;font-size:&nbsp;18px;&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&gt;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&lt;/span&gt;&nbsp;&nbsp;</span></p></li></ol><p><br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">后台输出：</span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">************获取所有公有的字段********************&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.String&nbsp;fanshe.field.Student.name&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">************获取所有的字段(包括私有、受保护、默认的)********************&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.String&nbsp;fanshe.field.Student.name&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">protected</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.field.Student.age&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">char</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.field.Student.sex&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">private</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.String&nbsp;fanshe.field.Student.phoneNum&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">*************获取公有字段**并调用***********************************&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.String&nbsp;fanshe.field.Student.name&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">验证姓名：刘德华&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">**************获取私有字段****并调用********************************&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">private</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.String&nbsp;fanshe.field.Student.phoneNum&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">验证电话：Student&nbsp;[name=刘德华,&nbsp;age=<span class=\"number\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">0</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">,&nbsp;sex=&nbsp;&nbsp;</span></span></p></li></ol><p><br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">由此可见</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">调用字段时：需要传递两个参数：</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span>Object obj = stuClass.getConstructor().newInstance();//产生Student对象--》Student stu = new Student();<br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span>//为字段设置值<br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span>f.set(obj, &quot;刘德华&quot;);//为Student对象中的name属性赋值--》stu.name = &quot;刘德华&quot;<br/></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"></span>第一个参数：要传入设置的对象，第二个参数：要传入实参</span></p><h2 style=\"margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(69, 69, 69); font-weight: 400; font-size: 24px; line-height: 32px; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(12, 137, 207);\"></a><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(66, 139, 202); outline: 0px; margin: 0px; padding: 0px;\"></a><span style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">4、获取成员方法并调用</span></h2><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">student类：</span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&lt;span&nbsp;style=</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;font-size:14px;&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&gt;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">package</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.method;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Student&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//**************成员方法***************//</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;show1(String&nbsp;s){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;调用了：公有的，String参数的show1():&nbsp;s&nbsp;=&nbsp;&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;s);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">protected</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;show2(){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;调用了：受保护的，无参的show2()&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;show3(){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;调用了：默认的，无参的show3()&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">private</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;String&nbsp;show4(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;age){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;调用了，私有的，并且有返回值的，int参数的show4():&nbsp;age&nbsp;=&nbsp;&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;age);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">return</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;abcd&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&lt;/span&gt;&nbsp;&nbsp;</span></p></li></ol><p><br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">测试类：</span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&lt;span&nbsp;style=</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;font-size:14px;&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&gt;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">package</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.method;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">import</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.reflect.Method;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">/*</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;获取成员方法并调用：</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;1.批量的：</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Method[]&nbsp;getMethods():获取所有&quot;公有方法&quot;；（包含了父类的方法也包含Object类）</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Method[]&nbsp;getDeclaredMethods():获取所有的成员方法，包括私有的(不包括继承的)</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;2.获取单个的：</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Method&nbsp;getMethod(String&nbsp;name,Class&lt;?&gt;...&nbsp;parameterTypes):</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;参数：</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;:&nbsp;方法名；</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class&nbsp;...&nbsp;:&nbsp;形参的Class类型对象</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Method&nbsp;getDeclaredMethod(String&nbsp;name,Class&lt;?&gt;...&nbsp;parameterTypes)</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;调用方法：</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method&nbsp;--&gt;&nbsp;public&nbsp;Object&nbsp;invoke(Object&nbsp;obj,Object...&nbsp;args):</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;参数说明：</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj&nbsp;:&nbsp;要调用方法的对象；</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args:调用方式时所传递的实参；</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\"></span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">):</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*/</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;MethodClass&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">static</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;main(String[]&nbsp;args)&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">throws</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Exception&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//1.获取Class对象</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class&nbsp;stuClass&nbsp;=&nbsp;Class.forName(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;fanshe.method.Student&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//2.获取所有公有方法</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;***************获取所有的”公有“方法*******************&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stuClass.getMethods();&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method[]&nbsp;methodArray&nbsp;=&nbsp;stuClass.getMethods();&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">for</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">(Method&nbsp;m&nbsp;:&nbsp;methodArray){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(m);&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;***************获取所有的方法，包括私有的*******************&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;methodArray&nbsp;=&nbsp;stuClass.getDeclaredMethods();&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">for</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">(Method&nbsp;m&nbsp;:&nbsp;methodArray){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(m);&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;***************获取公有的show1()方法*******************&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method&nbsp;m&nbsp;=&nbsp;stuClass.getMethod(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;show1&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">,&nbsp;String.</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(m);&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//实例化一个Student对象</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object&nbsp;obj&nbsp;=&nbsp;stuClass.getConstructor().newInstance();&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m.invoke(obj,&nbsp;<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;刘德华&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;***************获取私有的show4()方法******************&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m&nbsp;=&nbsp;stuClass.getDeclaredMethod(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;show4&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">,&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">.</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(m);&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m.setAccessible(<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">true</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);</span><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//解除私有限定</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object&nbsp;result&nbsp;=&nbsp;m.invoke(obj,&nbsp;<span class=\"number\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">20</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);</span><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//需要两个参数，一个是要调用的对象（获取有反射），一个是实参</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;返回值：&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;+&nbsp;result);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&lt;/span&gt;&nbsp;&nbsp;</span></p></li></ol><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">控制台输出：</span><br/></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">***************获取所有的”公有“方法*******************&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.method.Student.show1(java.lang.String)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">final</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.Object.wait(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">long</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">,</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">throws</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.InterruptedException&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">final</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">native</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.Object.wait(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">long</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">throws</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.InterruptedException&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">final</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.Object.wait()&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">throws</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.InterruptedException&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">boolean</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.Object.equals(java.lang.Object)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.String&nbsp;java.lang.Object.toString()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">native</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.Object.hashCode()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">final</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">native</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.Class&nbsp;java.lang.Object.getClass()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">final</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">native</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.Object.notify()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">final</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">native</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.Object.notifyAll()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">***************获取所有的方法，包括私有的*******************&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.method.Student.show1(java.lang.String)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">private</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.String&nbsp;fanshe.method.Student.show4(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">protected</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.method.Student.show2()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.method.Student.show3()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">***************获取公有的show1()方法*******************&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.method.Student.show1(java.lang.String)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">调用了：公有的，String参数的show1():&nbsp;s&nbsp;=&nbsp;刘德华&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">***************获取私有的show4()方法******************&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">private</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.String&nbsp;fanshe.method.Student.show4(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">调用了，私有的，并且有返回值的，<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">参数的show4():&nbsp;age&nbsp;=&nbsp;</span><span class=\"number\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">20</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">返回值：abcd&nbsp;&nbsp;</span></p></li></ol><p><br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">由此可见：</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\">m = stuClass.getDeclaredMethod(&quot;show4&quot;, int.class)</span>;//调用制定方法（所有包括私有的），需要传入两个参数，第一个是调用的方法名称，第二个是方法的形参类型，切记是类型。<span style=\"box-sizing: border-box; margin: 0px; padding: 0px; white-space: pre;\"><br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span>System.out.println(m);<br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span>m.setAccessible(true);//解除私有限定<br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span>Object result = m.invoke(obj, 20);//需要两个参数，一个是要调用的对象（获取有反射），一个是实参<br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span>System.out.println(&quot;返回值：&quot; + result);</span>//</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><br/></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">控制台输出：</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"></span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">***************获取所有的”公有“方法*******************&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.method.Student.show1(java.lang.String)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">final</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.Object.wait(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">long</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">,</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">throws</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.InterruptedException&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">final</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">native</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.Object.wait(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">long</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">throws</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.InterruptedException&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">final</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.Object.wait()&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">throws</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.InterruptedException&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">boolean</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.Object.equals(java.lang.Object)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.String&nbsp;java.lang.Object.toString()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">native</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.Object.hashCode()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">final</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">native</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.Class&nbsp;java.lang.Object.getClass()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">final</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">native</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.Object.notify()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">final</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">native</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.Object.notifyAll()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">***************获取所有的方法，包括私有的*******************&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.method.Student.show1(java.lang.String)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">private</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.String&nbsp;fanshe.method.Student.show4(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">protected</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.method.Student.show2()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.method.Student.show3()&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">***************获取公有的show1()方法*******************&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.method.Student.show1(java.lang.String)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">调用了：公有的，String参数的show1():&nbsp;s&nbsp;=&nbsp;刘德华&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">***************获取私有的show4()方法******************&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">private</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.String&nbsp;fanshe.method.Student.show4(</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">)&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">调用了，私有的，并且有返回值的，<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">int</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">参数的show4():&nbsp;age&nbsp;=&nbsp;</span><span class=\"number\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">20</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">返回值：abcd&nbsp;&nbsp;</span></p></li></ol><p><br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">其实这里的成员方法：在模型中有属性一词，就是那些setter（）方法和getter()方法。还有字段组成，这些内容在内省中详解</span></p><h2 style=\"margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(69, 69, 69); font-weight: 400; font-size: 24px; line-height: 32px; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(12, 137, 207);\"></a><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(66, 139, 202); outline: 0px; margin: 0px; padding: 0px;\"></a><span style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">5、反射main方法</span></h2><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">student类：</span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&lt;span&nbsp;style=</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;font-size:14px;&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&gt;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">package</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.main;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Student&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">static</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;main(String[]&nbsp;args)&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;main方法执行了。。。&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&lt;/span&gt;&nbsp;&nbsp;</span></p></li></ol><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 14px;\"><br/><br/></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 14px;\">测试类：</span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&lt;span&nbsp;style=</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;font-size:14px;&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&gt;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">package</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;fanshe.main;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">import</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.reflect.Method;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">/**</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;获取Student类的main方法、不要与当前的main方法搞混了</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*/</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Main&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">static</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;main(String[]&nbsp;args)&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">try</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//1、获取Student对象的字节码</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class&nbsp;clazz&nbsp;=&nbsp;Class.forName(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;fanshe.main.Student&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//2、获取main方法</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method&nbsp;methodMain&nbsp;=&nbsp;clazz.getMethod(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;main&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">,&nbsp;String[].</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);</span><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//第一个参数：方法名称，第二个参数：方法形参的类型，</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//3、调用main方法</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//&nbsp;methodMain.invoke(null,&nbsp;new&nbsp;String[]{&quot;a&quot;,&quot;b&quot;,&quot;c&quot;});</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//第一个参数，对象类型，因为方法是static静态的，所以为null可以，第二个参数是String数组，这里要注意在jdk1.4时是数组，jdk1.5之后是可变参数</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//这里拆的时候将&nbsp;&nbsp;new&nbsp;String[]{&quot;a&quot;,&quot;b&quot;,&quot;c&quot;}&nbsp;拆成3个对象。。。所以需要将它强转。</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;methodMain.invoke(<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">null</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">,&nbsp;(Object)</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">new</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;String[]{</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;a&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">,</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;b&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">,</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;c&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">});</span><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//方式一</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//&nbsp;methodMain.invoke(null,&nbsp;new&nbsp;Object[]{new&nbsp;String[]{&quot;a&quot;,&quot;b&quot;,&quot;c&quot;}});//方式二</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">catch</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;(Exception&nbsp;e)&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">}&lt;/span&gt;&lt;span&nbsp;style=<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;font-size:18px;&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&gt;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&lt;/span&gt;&nbsp;&nbsp;</span></p></li></ol><p><br/><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">控制台输出：</span></p><p>main方法执行了。。。</p><h2 style=\"margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(69, 69, 69); font-weight: 400; font-size: 24px; line-height: 32px; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(12, 137, 207);\"></a><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(66, 139, 202); outline: 0px; margin: 0px; padding: 0px;\"></a><span style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">6、反射方法的其它使用之---通过反射运行配置文件内容</span></h2><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">student类：</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"></span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Student&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;show(){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;is&nbsp;show()&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">}&nbsp;&nbsp;</span></p></li></ol><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><br/></span></p><p>配置文件以txt文件为例子（pro.txt）：<br/></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">className&nbsp;=&nbsp;cn.fanshe.Student&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">methodName&nbsp;=&nbsp;show&nbsp;&nbsp;</span></p></li></ol><p><br/>测试类：</p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"></span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">import</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.io.FileNotFoundException;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">import</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.io.FileReader;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">import</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.io.IOException;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">import</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.reflect.Method;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">import</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.util.Properties;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">/*</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;我们利用反射和配置文件，可以使：应用程序更新时，对源码无需进行任何修改</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;我们只需要将新类发送给客户端，并修改配置文件即可</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*/</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Demo&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">static</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;main(String[]&nbsp;args)&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">throws</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Exception&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//通过反射获取Class对象</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class&nbsp;stuClass&nbsp;=&nbsp;Class.forName(getValue(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;className&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">));</span><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//&quot;cn.fanshe.Student&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//2获取show()方法</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method&nbsp;m&nbsp;=&nbsp;stuClass.getMethod(getValue(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;methodName&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">));</span><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//show</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//3.调用show()方法</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m.invoke(stuClass.getConstructor().newInstance());&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//此方法接收一个key，在配置文件中获取相应的value</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">static</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;String&nbsp;getValue(String&nbsp;key)&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">throws</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;IOException{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Properties&nbsp;pro&nbsp;=&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">new</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Properties();</span><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//获取配置文件的对象</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileReader&nbsp;in&nbsp;=&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">new</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;FileReader(</span><span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;pro.txt&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);</span><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//获取输入流</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pro.load(in);<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//将流加载到配置文件对象中</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in.close();&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">return</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;pro.getProperty(key);</span><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//返回根据key获取的value值</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">}&nbsp;&nbsp;</span></p></li></ol><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><br/></span></p><p>控制台输出：</p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">is show()</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><br/></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">需求：</span><br/>当我们升级这个系统时，不要Student类，而需要新写一个Student2的类时，这时只需要更改pro.txt的文件内容就可以了。代码就一点不用改动</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><br/></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">要替换的student2类：</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"></span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Student2&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;show2(){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;is&nbsp;show2()&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">}&nbsp;&nbsp;</span></p></li></ol><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><br/></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">配置文件更改为：</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"></span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">className&nbsp;=&nbsp;cn.fanshe.Student2&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">methodName&nbsp;=&nbsp;show2&nbsp;&nbsp;</span></p></li></ol><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">控制台输出：</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">is show2();</span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"></span></p><h2 style=\"margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-weight: 400; font-size: 24px; line-height: 32px;\"><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(12, 137, 207);\"></a><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(66, 139, 202); outline: 0px; margin: 0px; padding: 0px;\"></a><span style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">7、反射方法的其它使用之---通过反射越过泛型检查</span></h2><p>泛型用在编译期，编译过后泛型擦除（消失掉）。所以是可以通过反射越过泛型检查的</p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">测试类：<br/></span></p><p><span style=\"box-sizing: border-box; font-weight: 700;\">[java]</span>&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"ViewSource\" title=\"view plain\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_plain.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">view plain</a><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\">&nbsp;<a target=\"_blank\" href=\"http://blog.csdn.net/sinat_38259539/article/details/71799078#\" class=\"CopyToClipboard\" title=\"copy\" style=\"text-decoration-line: none; box-sizing: border-box; background-image: url(&quot;https://csdnimg.cn/release/phoenix/images/ico_copy.gif&quot;); background-position: left top; background-size: initial; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: inherit; border: none; padding: 1px; margin: 0px 10px 0px 0px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px; outline: 0px;\">copy</a></span><span class=\"tracking-ad\" style=\"box-sizing: border-box; margin: 0px; padding: 0px;\"></span></p><ol class=\"dp-j list-paddingleft-2\" style=\"box-sizing: border-box; padding: 0px; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-bottom: 1px !important; margin-left: 45px !important;\"><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">import</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.lang.reflect.Method;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">import</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;java.util.ArrayList;&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">/*</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;通过反射越过泛型检查</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*&nbsp;例如：有一个String泛型的集合，怎样能向这个集合中添加一个Integer类型的值？</span>&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">&nbsp;*/</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\"><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Demo&nbsp;{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">public</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">static</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">void</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;main(String[]&nbsp;args)&nbsp;</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">throws</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;Exception{&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ArrayList&lt;String&gt;&nbsp;strList&nbsp;=&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">new</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;ArrayList&lt;&gt;();&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strList.add(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;aaa&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strList.add(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;bbb&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//&nbsp;&nbsp;strList.add(100);</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//获取ArrayList的Class对象，反向的调用add()方法，添加数据</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class&nbsp;listClass&nbsp;=&nbsp;strList.getClass();&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//得到&nbsp;strList&nbsp;对象的字节码&nbsp;对象</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//获取add()方法</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method&nbsp;m&nbsp;=&nbsp;listClass.getMethod(<span class=\"string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 255); background-color: inherit;\">&quot;add&quot;</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">,&nbsp;Object.</span><span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">class</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//调用add()方法</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m.invoke(strList,&nbsp;<span class=\"number\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;\">100</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">);&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;\">//遍历集合</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: 700; word-wrap: normal;\">for</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; background-color: inherit;\">(Object&nbsp;obj&nbsp;:&nbsp;strList){&nbsp;&nbsp;</span></span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(obj);&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: none; color: rgb(0, 0, 0); background-color: inherit;\">}&nbsp;&nbsp;</span></p></li></ol><p><br/>控制台输出：</p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">aaa<br/>bbb<br/>100<br/></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\"><br/></span></p><p><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; font-size: 18px;\">//反射就总结到这，下面的内省章节也和反射有关，可以算是反射的高级使用吧，如果有兴趣，可以继续查看总结的内省部分。</span></p><p><br/></p>', '16,19,21', '1', '1', '', '0', '2018-04-16 16:06:46', '2018-04-19 16:10:18', '1', null, '10', '0', '1', '28', '1', '');
INSERT INTO `tb_blog_article` VALUES ('1523866141374', '2018 浅谈前端面试那些事', '知识点汇总1、HTMLHTML5新特性，语义化浏览器的标准模式和怪异模式xhtml和html的区别使用data-的好处meta标签canvasHTML废弃的标签IE6 bug，和一些定位写法css js放置位置和原因什么是渐进式渲染html模板语言meta viewport原理-2、CSS盒模型，box-sizingCSS3新特性，伪类，伪元素，锚伪类CSS实现隐藏页面的方式如何实现水平居中和垂直居中。说说position，display请解释*{box-sizing:border-box;}的作用，并说明使用它的好处浮动元素引起的问题和解决办法？绝对定位和相对定位，元素浮动后的display...', '<h4 style=\"font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; margin: 8px 0px 15px; padding: 0px; box-sizing: border-box; color: rgb(62, 62, 62); font-size: 20px; line-height: 28px; white-space: normal; background-color: rgb(255, 255, 255);\">知识点汇总</h4><p><span style=\"box-sizing: border-box; font-weight: 700; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\">1、HTML</span></p><p class=\"shifubrush\" style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: none;\"><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">HTML5新特性，语义化</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">浏览器的标准模式和怪异模式</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">xhtml和html的区别</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">使用data-的好处</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">meta标签</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">canvas</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">HTML废弃的标签</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">IE6 bug，和一些定位写法</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">css js放置位置和原因</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">什么是渐进式渲染</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">html模板语言</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">meta viewport原理-</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255); min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\"></span></p><p><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-weight: 700;\">2、CSS</span></span><br/></p><p class=\"shifubrush\" style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: none;\"><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">盒模型，box-sizing</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">CSS3新特性，伪类，伪元素，锚伪类</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">CSS实现隐藏页面的方式</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">如何实现水平居中和垂直居中。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">说说position，display</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">请解释*{box-sizing:border-box;}的作用，并说明使用它的好处</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">浮动元素引起的问题和解决办法？绝对定位和相对定位，元素浮动后的display值</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">link和@import引入css的区别</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">解释一下css3的flexbox，以及适用场景</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">inline和inline-block的区别</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">哪些是块级元素那些是行级元素，各有什么特点</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">grid布局</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">table布局的作用</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">实现两栏布局有哪些方法？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">css dpi</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">你知道attribute和property的区别么</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">css布局问题？css实现三列布局怎么做？如果中间是自适应又怎么做？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">流式布局如何实现，响应式布局如何实现</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">移动端布局方案</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">实现三栏布局（圣杯布局，双飞翼布局，flex布局）</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">清除浮动的原理</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">overflow:hidden有什么缺点？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">padding百分比是相对于父级宽度还是自身的宽度</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">css3动画，transition和animation的区别，animation的属性，加速度，重力的模拟实现</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">CSS 3 如何实现旋转图片（transform: rotate）</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">sass less</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">对移动端开发了解多少？（响应式设计、Zepto；@media、viewport、JavaScript 正则表达式判断平台。）</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">什么是bfc，如何创建bfc？解决什么问题？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">CSS中的长度单位（px,pt,rem,em,ex,vw,vh,vh,vmin,vmax）</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">CSS 选择器的优先级是怎样的？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">雪碧图</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">svg</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">媒体查询的原理是什么？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">CSS 的加载是异步的吗？表现在什么地方？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">常遇到的浏览器兼容性问题有哪些？常用的hack的技巧</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">外边距合并</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">解释一下“::before”和“:after”中的双冒号和单冒号的区别-</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255); min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p><span style=\"color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\">3、JS</span></p><p class=\"shifubrush\" style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: none;\"><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">js的基本类型有哪些？引用类型有哪些？null和undefined的区别。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">如何判断一个变量是Array类型？如何判断一个变量是Number类型？（都不止一种）</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">Object是引用类型嘛？引用类型和基本类型有什么区别？哪个是存在堆哪一个是存在栈上面的？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">JS常见的dom操作api</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">解释一下事件冒泡和事件捕获</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">事件委托（手写例子），事件冒泡和捕获，如何阻止冒泡？如何组织默认事件？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">对闭包的理解？什么时候构成闭包？闭包的实现方法？闭包的优缺点？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">this有哪些使用场景？跟C,Java中的this有什么区别？如何改变this的值？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">call，apply，bind</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">显示原型和隐式原型，手绘原型链，原型链是什么？为什么要有原型链</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">创建对象的多种方式</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">实现继承的多种方式和优缺点</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">new 一个对象具体做了什么</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">手写Ajax，XMLHttpRequest</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">变量提升</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">举例说明一个匿名函数的典型用例</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">指出JS的宿主对象和原生对象的区别，为什么扩展JS内置对象不是好的做法？有哪些内置对象和内置函数？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">attribute和property的区别</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">document load和document DOMContentLoaded两个事件的区别</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">=== 和 == , [] === [], undefined === undefined,[] == [], undefined == undefined</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">typeof能够得到哪些值</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">什么是“use strict”,好处和坏处</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">函数的作用域是什么？js 的作用域有几种？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">JS如何实现重载和多态</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">常用的数组api，字符串api</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">原生事件绑定（跨浏览器），dom0和dom2的区别？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">给定一个元素获取它相对于视图窗口的坐标</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">如何实现图片滚动懒加载</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">js 的字符串类型有哪些方法？ 正则表达式的函数怎么使用？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">深拷贝</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">编写一个通用的事件监听函数</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">web端cookie的设置和获取</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">setTimeout和promise的执行顺序</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">JavaScript 的事件流模型都有什么？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">navigator对象，location和history</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">js的垃圾回收机制</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">内存泄漏的原因和场景</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">DOM事件的绑定的几种方式</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">DOM事件中target和currentTarget的区别</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">typeof 和 instanceof 区别，instanceof原理</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">js动画和css3动画比较</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">JavaScript 倒计时（setTimeout）</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">js处理异常</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">js的设计模式知道那些</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">轮播图的实现，以及轮播图组件开发，轮播10000张图片过程</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">websocket的工作原理和机制。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">手指点击可以触控的屏幕时，是什么事件？ 什么是函数柯里化？以及说一下JS的API有哪些应用到了函数柯里化的实现？(函数柯里化一些了解，以及在函数式编程的应用，- 最后说了一下JS中bind函数和数组的reduce方法用到了函数柯里化。)</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">JS代码调试-</span></p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><br/></p></li></ul><p><span style=\"color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\">4、ES6</span></p><p class=\"shifubrush\" style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: none;\"><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">谈一谈 promise</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">所有的 ES6 特性你都知道吗？如果遇到一个东西不知道是 ES6 还是 ES5, 你该怎么区分它</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">es6的继承和es5的继承有什么区别</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">promise封装ajax</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">let const的优点</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">es6 generator 是什么，async/await 实现原理</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">ES6和node的commonjs模块化规范区别</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">箭头函数，以及它的this-</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p><span style=\"color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\">5、计算机网络</span></p><p class=\"shifubrush\" style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: none;\"><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">HTTP协议头含有哪些重要的部分，HTTP状态码</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">网络url输入到输出怎么做？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">性能优化为什么要减少 HTTP 访问次数？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">Http请求的过程与原理</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">https（对是https）有几次握手和挥手？https的原理。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">http有几次挥手和握手？TLS的中文名？TLS在哪一网络层？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">TCP连接的特点，TCP连接如何保证安全可靠的？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">为什么TCP连接需要三次握手，两次不可以吗，为什么</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">为什么tcp要三次握手四次挥手？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">tcp的三次握手和四次挥手画图（当场画写ack 和 seq的值）？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">tcp与udp的区别</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">get和post的区别？什么情况下用到？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">http2 与http1 的区别？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">websocket</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">什么是tcp流，什么是http流</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">babel是如何将es6代码编译成es5的</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">http2的持久连接和管线化</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">域名解析时是tcp还是udp</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">域名发散和域名收敛</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">Post一个file的时候file放在哪的？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">HTTP Response的Header里面都有些啥？-</span></p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\"><br/></span></p></li></ul><p><span style=\"color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\">6、浏览器相关</span></p><p class=\"shifubrush\" style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: none;\"><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">跨域，为什么JS会对跨域做出限制</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">前端安全：xss，csrf…</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">浏览器怎么加载页面的？script脚本阻塞有什么解决方法？defer和async的区别？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">浏览器强缓存和协商缓存</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">浏览器的全局变量有哪些</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">浏览器同一时间能够从一个域名下载多少资源</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">按需加载，不同页面的元素判断标准</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">web存储、cookies、localstroge等的使用和区别</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">浏览器的内核</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">如何实现缓存机制？（从200缓存，到cache到etag再到）</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">说一下200和304的理解和区别</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">什么是预加载、懒加载</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">一个 XMLHttpRequest 实例有多少种状态？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">dns解析原理，输入网址后如何查找服务器</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">服务器如何知道你？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">浏览器渲染过程</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">ie的某些兼容性问题</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">session</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">拖拽实现</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">拆解url的各部分-</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p><span style=\"color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\">7、工程化</span></p><p class=\"shifubrush\" style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: none;\"><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">对webpack,gulp，grunt等有没有了解?对比。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">webpack的入口文件怎么配置，多个入口怎么分割。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">webpack的loader和plugins的区别</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">gulp的具体使用。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">前端工程化的理解、如何自己实现一个文件打包，比如一个JS文件里同时又ES5 和ES6写的代码，如何编译兼容他们-</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p><span style=\"color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\">8、模块化</span></p><p class=\"shifubrush\" style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: none;\"><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">对AMD,CMD,CommonJS有没有了解?</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">为什么要模块化？不用的时候和用RequireJs的时候代码大概怎么写？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">说说有哪些模块化的库，有了解过模块化的发展的历史吗？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">分别说说同步和异步模块化的应用场景，说下AMD异步模块化实现的原理？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">如何将项目里面的所有的require的模块语法换成import的ES6的语法？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">使用模块化加载时，模块加载的顺序是怎样的，如果不知道，根据已有的知识，你觉得顺序应该是怎么样的？-</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p><span style=\"color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\">9、框架</span></p><p class=\"shifubrush\" style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: none;\"><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">使用过哪些框架？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">zepto 和 jquery 是什么关系，有什么联系么？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">jquery源码如何实现选择器的，为什么$取得的对象要设计成数组的形式，这样设计的目的是什么</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">jquery如何绑定事件，有几种类型和区别</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">什么是MVVM，MVC，MVP</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">Vue和Angular的双向数据绑定原理</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">Vue，Angular组件间通信以及路由原理</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">react和vue的生命周期</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">react和vue的虚拟dom以及diff算法</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">vue的observer，watcher，compile</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">react和angular分别用在什么样的业务吗？性能方面和MVC层面上的区别</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">jQuery对象和JS的Element有什么区别</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">jQuery对象是怎么实现的</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">jQuery除了它封装了一些方法外，还有什么值得我们去学习和使用的？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">jQuery的$(‘xxx’)做了什么事情</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">介绍一下bootstrap的栅格系统是如何实现的-</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p><span style=\"color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\">10、NodeJS</span></p><p class=\"shifubrush\" style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: none;\"><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">对nodejs有没有了解</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">Express 和 koa 有什么关系，有什么区别？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">nodejs适合做什么样的业务？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">nodejs与php，java有什么区别</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">Nodejs中的Stream和Buffer有什么区别？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">node的异步问题是如何解决的？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">node是如何实现高并发的？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">说一下 Nodejs 的 event loop 的原理-</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p><span style=\"color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\">11、数据结构</span></p><p class=\"shifubrush\" style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: none;\"><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">基本数据结构：（数组、队列、链表、堆、二叉树、哈希表等等）</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">8种排序算法，原理，以及适用场景和复杂度</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">说出越多越好的费波拉切数列的实现方法？-</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p><span style=\"color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\">12、性能优化</span></p><p class=\"shifubrush\" style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: none;\"><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">cdn的用法是什么？什么时候用到？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">浏览器的页面优化？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">如何优化 DOM 操作的性能</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">单页面应用有什么SEO方案？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">单页面应用首屏显示比较慢，原因是什么？有什么解决方案？-</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p><span style=\"color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\">13、其他</span></p><p class=\"shifubrush\" style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: none;\"><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">正则表达式</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">前端渲染和后端渲染的优缺点</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">数据库的四大特性，什么是原子性，表的关系</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">你觉得前端体系应该是怎样的？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">一个静态资源要上线，里面有各种资源依赖，你如何平稳上线</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">如果要你去实现一个前端模板引擎，你会怎么做</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">知道流媒体查询吗？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">SEO</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">mysql 和 mongoDB 有什么区别？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">restful的method解释</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">数据库知识、操作系统知识</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">click在ios上有300ms延迟，原因及如何解决</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">移动端的适配，rem+媒体查询/meta头设置</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">移动端的手势和事件；</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">unicode，utf8，gbk编码的了解，乱码的解决-</span></p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\"><br/></span></p></li></ul><p><span style=\"color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\">14、开放性问题</span></p><p class=\"shifubrush\" style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: none;\"><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">你都看过什么书？最近在看什么书？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">用过什么框架？有没有看过什么框架的代码？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">有没有学过设计模式？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">说一说观察者模式吧！能不能写出来？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">你最大的优点是什么？那你最大的缺点呢？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">你除了写博客还有什么输出？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">现在你的领导给你了一份工作，要求你一个星期完成，但你看了需求以后估计需要3周才能完成，你该怎么办？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">平时关注的前端技术</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">如何规划自己的职业生涯</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">项目过程中，有遇到什么问题吗？怎么解决的？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">最近在研究哪方面的东西？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">请介绍一项你最热爱、最擅长的专业领域，并且介绍的学习规划。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">请介绍你参与的印象最深刻的一个项目，为什么？并且介绍你在项目中的角色和发挥的作用。-</span></p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\"></span></p></li></ul><p><span style=\"color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\">15、HR面</span></p><p class=\"shifubrush\" style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: none;\"><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">你为什么要学习前端？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">你平时的是怎么学习前端的？有什么输出？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">你觉得自己最好的项目是什么？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">身边比较佩服的人有什么值得你学习的？你为什么没有跟他们一样？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">同事的什么问题会让你接受不了</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">压力最大的事情是什么？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">身边的朋友通常对你的评价是什么</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">喜欢什么样的工作氛围</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">如何看待加班</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">有没有对象</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">意向城市</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">其他的offer</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">为什么要录取你？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">周末都会干什么？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; min-height: 1em;\"><span style=\"margin: 0px; padding: 0px; box-sizing: border-box; line-height: 22px; color: rgb(74, 74, 74); font-size: 15px;\">未来职业规划</span></p></li></ul><p><br/></p>', '16,21,24,25', '1', '1', '', '0', '2018-04-16 16:09:01', '2018-04-17 08:43:28', '1', null, '19', '0', '1', '32', '1', '');
INSERT INTO `tb_blog_article` VALUES ('1523867684822', 'java 动态代理', 'java动态代理的作用？可以将一个对象A的所有操作代理给另外一个对象B，这样可以在不改变A对象的情况下，通过修改B对象，实现在A对象的方法前方法后加上一些必要的代码，如打印日志。那么java动态代理代码如何编写？package com.wzt.www.proxy;import java.lang.reflect.InvocationHandler;import java.lang.reflect.Method;import java.lang.reflect.Proxy;/** * Create...', '<p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\">java动态代理的作用？</p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\">可以将一个对象A的所有操作代理给另外一个对象B，这样可以在不改变A对象的情况下，通过修改B对象，实现在A对象的方法前方法后加上一些必要的代码，如打印日志。</p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\">那么java动态代理代码如何编写？</p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\">package&nbsp;com.wzt.www.proxy;import&nbsp;java.lang.reflect.InvocationHandler;import&nbsp;java.lang.reflect.Method;import&nbsp;java.lang.reflect.Proxy;/**&nbsp;*&nbsp;Created&nbsp;by&nbsp;bfd&nbsp;on&nbsp;2018/2/1.&nbsp;*/public&nbsp;class&nbsp;MyInvocationHandler&nbsp;implements&nbsp;InvocationHandler&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;目标对象&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Object&nbsp;target;&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;构造方法&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;target&nbsp;目标对象&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;MyInvocationHandler(Object&nbsp;target)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.target&nbsp;=&nbsp;target;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;执行目标对象的方法&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;&nbsp;&nbsp;@Override&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Object&nbsp;invoke(Object&nbsp;proxy,&nbsp;Method&nbsp;method,&nbsp;Object[]&nbsp;args)&nbsp;throws&nbsp;Throwable&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;在目标对象的方法执行之前简单的打印一下&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;------------------before------------------&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;执行目标对象的方法&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object&nbsp;result&nbsp;=&nbsp;method.invoke(target,&nbsp;args);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;在目标对象的方法执行之后简单的打印一下&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;-------------------after------------------&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;获取目标对象的代理对象&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;代理对象&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Object&nbsp;getProxy()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Proxy.newProxyInstance(Thread.currentThread().getContextClassLoader(),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target.getClass().getInterfaces(),&nbsp;this);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\">package&nbsp;com.wzt.www.proxy;/**&nbsp;*&nbsp;Created&nbsp;by&nbsp;bfd&nbsp;on&nbsp;2018/2/1.&nbsp;*/public&nbsp;interface&nbsp;UserService&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;目标方法&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;abstract&nbsp;void&nbsp;add();\r\n\r\n}</pre><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\">package&nbsp;com.wzt.www.proxy;/**&nbsp;*&nbsp;Created&nbsp;by&nbsp;bfd&nbsp;on&nbsp;2018/2/1.&nbsp;*/public&nbsp;class&nbsp;UserServiceImpl&nbsp;implements&nbsp;UserService&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;(non-Javadoc)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@see&nbsp;dynamic.proxy.UserService#add()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;&nbsp;&nbsp;@Override&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;add()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;--------------------add---------------&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\">package&nbsp;com.wzt.www.proxy;import&nbsp;org.junit.Test;/**&nbsp;*&nbsp;Created&nbsp;by&nbsp;bfd&nbsp;on&nbsp;2018/2/1.&nbsp;*/public&nbsp;class&nbsp;ProxyTest&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;@Test&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;testProxy()&nbsp;throws&nbsp;Throwable&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;实例化目标对象&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UserService&nbsp;userService&nbsp;=&nbsp;new&nbsp;UserServiceImpl();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;实例化InvocationHandler&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MyInvocationHandler&nbsp;invocationHandler&nbsp;=&nbsp;new&nbsp;MyInvocationHandler(userService);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;根据目标对象生成代理对象&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UserService&nbsp;proxy&nbsp;=&nbsp;(UserService)&nbsp;invocationHandler.getProxy();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;调用代理对象的方法&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy.add();\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\">代码写起来灰常简单，关键就是实现InvocationHandler接口，在invoke方法中加上一些逻辑代码，</pre><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\">然后使用Proxy.newProxyInstance&nbsp;方法创建代理类那么java是如何实现的呢？如果让我实现我觉得很简单，</pre><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\">就是在jvm运行时动态生成字节码，然后创建对象放在jvm里面，那么jdk是不是这么实现的呢，这就需要读一下Proxy里的源码</pre><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\"><br/></pre><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\">public&nbsp;static&nbsp;Object&nbsp;newProxyInstance(ClassLoader&nbsp;loader,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class&lt;?&gt;[]&nbsp;interfaces,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InvocationHandler&nbsp;h)&nbsp;&nbsp;&nbsp;&nbsp;throws&nbsp;IllegalArgumentException\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;Objects.requireNonNull(h);&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;Class&lt;?&gt;[]&nbsp;intfs&nbsp;=&nbsp;interfaces.clone();&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;SecurityManager&nbsp;sm&nbsp;=&nbsp;System.getSecurityManager();&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(sm&nbsp;!=&nbsp;null)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;checkProxyAccess(Reflection.getCallerClass(),&nbsp;loader,&nbsp;intfs);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Look&nbsp;up&nbsp;or&nbsp;generate&nbsp;the&nbsp;designated&nbsp;proxy&nbsp;class.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;&nbsp;&nbsp;Class&lt;?&gt;&nbsp;cl&nbsp;=&nbsp;getProxyClass0(loader,&nbsp;intfs);&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Invoke&nbsp;its&nbsp;constructor&nbsp;with&nbsp;the&nbsp;designated&nbsp;invocation&nbsp;handler.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(sm&nbsp;!=&nbsp;null)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;checkNewProxyPermission(Reflection.getCallerClass(),&nbsp;cl);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;Constructor&lt;?&gt;&nbsp;cons&nbsp;=&nbsp;cl.getConstructor(constructorParams);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;InvocationHandler&nbsp;ih&nbsp;=&nbsp;h;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!Modifier.isPublic(cl.getModifiers()))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AccessController.doPrivileged(new&nbsp;PrivilegedAction&lt;Void&gt;()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Void&nbsp;run()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cons.setAccessible(true);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;cons.newInstance(new&nbsp;Object[]{h});\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(IllegalAccessException|InstantiationException&nbsp;e)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;InternalError(e.toString(),&nbsp;e);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(InvocationTargetException&nbsp;e)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Throwable&nbsp;t&nbsp;=&nbsp;e.getCause();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(t&nbsp;instanceof&nbsp;RuntimeException)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;(RuntimeException)&nbsp;t;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;InternalError(t.toString(),&nbsp;t);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(NoSuchMethodException&nbsp;e)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;InternalError(e.toString(),&nbsp;e);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p><span style=\"color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\">主要还是看看</span></p><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\">Class&lt;?&gt;&nbsp;cl&nbsp;=&nbsp;getProxyClass0(loader,&nbsp;intfs);</pre><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\"><br/></pre><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\">private&nbsp;static&nbsp;Class&lt;?&gt;&nbsp;getProxyClass0(ClassLoader&nbsp;loader,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class&lt;?&gt;...&nbsp;interfaces)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(interfaces.length&nbsp;&gt;&nbsp;65535)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;IllegalArgumentException(&quot;interface&nbsp;limit&nbsp;exceeded&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;If&nbsp;the&nbsp;proxy&nbsp;class&nbsp;defined&nbsp;by&nbsp;the&nbsp;given&nbsp;loader&nbsp;implementing&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;given&nbsp;interfaces&nbsp;exists,&nbsp;this&nbsp;will&nbsp;simply&nbsp;return&nbsp;the&nbsp;cached&nbsp;copy;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;otherwise,&nbsp;it&nbsp;will&nbsp;create&nbsp;the&nbsp;proxy&nbsp;class&nbsp;via&nbsp;the&nbsp;ProxyClassFactory&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;proxyClassCache.get(loader,&nbsp;interfaces);\r\n}</pre><p><span style=\"color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);\">该方法做了两件事情，</span></p><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\">1、校验interfaces的长度</pre><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\">2、从proxyClassCache中取出对象</pre><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\">详细看proxyClassCache.get(loader,interfaces)</pre><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\">proxyClassCache是一个WeakCache类型，也就是说动态代理有缓存机制。接下来看看缓存机制如何实现，也即WeakCache的逻辑</pre><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\">看下类结构，由于懒得整理，此处转载别人总结的</pre><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: auto; font-family: &quot;Courier New&quot;; font-size: 9.8pt; line-height: 22px;\"><br/></pre><pre style=\"margin-top: 0px; margin-bottom: 24px; padding: 0px; box-sizing: border-box; background-color: rgb(240, 240, 240); overflow-x: auto; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px;\"><br/></pre><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">看这个类的结构</p><pre class=\"hljs php\" style=\"margin-top: 0px; margin-bottom: 24px; padding: 8px; box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(240, 240, 240); overflow-x: auto; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px;\">//用了Reference记录引用队列,java&nbsp;gc时配合清除缓存用private&nbsp;final&nbsp;ReferenceQueue&lt;K&gt;&nbsp;refQueue&nbsp;&nbsp;=&nbsp;new&nbsp;ReferenceQueue&lt;&gt;();//缓存的底层实现private&nbsp;final&nbsp;ConcurrentMap&lt;Object,&nbsp;ConcurrentMap&lt;Object,&nbsp;Supplier&lt;V&gt;&gt;&gt;&nbsp;map&nbsp;=&nbsp;new&nbsp;ConcurrentHashMap&lt;&gt;();//记录所有缓存中的CacheKey,配合缓存的过期机制private&nbsp;final&nbsp;ConcurrentMap&lt;Supplier&lt;V&gt;,&nbsp;Boolean&gt;&nbsp;reverseMap&nbsp;=&nbsp;new&nbsp;ConcurrentHashMap&lt;&gt;();//两个二元操作函数private&nbsp;final&nbsp;BiFunction&lt;K,&nbsp;P,&nbsp;?&gt;&nbsp;subKeyFactory;private&nbsp;final&nbsp;BiFunction&lt;K,&nbsp;P,&nbsp;V&gt;&nbsp;valueFactory;</pre><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">这里最重要的的是map，将key-value介绍如下</p><table width=\"780\"><thead style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; border-width: 1px 0px 0px; border-right-style: initial; border-bottom-style: initial; border-left-style: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: initial; border-image: initial; border-top-style: solid; border-top-color: rgb(221, 221, 221);\" class=\"firstRow\"><th style=\"box-sizing: border-box; border-top-color: rgb(221, 221, 221); font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px; text-align: left; background-color: rgb(239, 243, 245);\">字段</th><th style=\"box-sizing: border-box; border-top-color: rgb(221, 221, 221); font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px; text-align: left; background-color: rgb(239, 243, 245);\">意义</th><th style=\"box-sizing: border-box; border-top-color: rgb(221, 221, 221); font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px; text-align: left; background-color: rgb(239, 243, 245);\">备注</th></tr></thead><tbody style=\"box-sizing: border-box; border: 0px;\"><tr style=\"box-sizing: border-box; border-width: 1px 0px 0px; border-right-style: initial; border-bottom-style: initial; border-left-style: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: initial; border-image: initial; border-top-style: solid; border-top-color: rgb(221, 221, 221);\"><td style=\"box-sizing: border-box; font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px;\">key</td><td style=\"box-sizing: border-box; font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px;\">通过classLoader来进行一级缓存</td><td style=\"box-sizing: border-box; font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px;\">实际类型为CacheKey</td></tr><tr style=\"box-sizing: border-box; border-width: 1px 0px 0px; border-right-style: initial; border-bottom-style: initial; border-left-style: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: initial; border-image: initial; border-top-style: solid; border-top-color: rgb(221, 221, 221); background-color: rgb(247, 247, 247);\"><td style=\"box-sizing: border-box; font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px;\">value</td><td style=\"box-sizing: border-box; font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px;\">二级缓存</td><td style=\"box-sizing: border-box; font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px;\">后续会介绍</td></tr></tbody></table><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">源码中把这个value的变量称为valuesMap，这里顺便借用，介绍这个“二级缓存”是干嘛的</p><table width=\"780\"><thead style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box; border-width: 1px 0px 0px; border-right-style: initial; border-bottom-style: initial; border-left-style: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: initial; border-image: initial; border-top-style: solid; border-top-color: rgb(221, 221, 221);\" class=\"firstRow\"><th style=\"box-sizing: border-box; border-top-color: rgb(221, 221, 221); font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px; text-align: left; background-color: rgb(239, 243, 245);\">字段</th><th style=\"box-sizing: border-box; border-top-color: rgb(221, 221, 221); font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px; text-align: left; background-color: rgb(239, 243, 245);\">意义</th><th style=\"box-sizing: border-box; border-top-color: rgb(221, 221, 221); font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px; text-align: left; background-color: rgb(239, 243, 245);\">备注</th></tr></thead><tbody style=\"box-sizing: border-box; border: 0px;\"><tr style=\"box-sizing: border-box; border-width: 1px 0px 0px; border-right-style: initial; border-bottom-style: initial; border-left-style: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: initial; border-image: initial; border-top-style: solid; border-top-color: rgb(221, 221, 221);\"><td style=\"box-sizing: border-box; font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px;\">key</td><td style=\"box-sizing: border-box; font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px;\">二级缓存的key，由classLoader和interfaces[]标识代理类</td><td style=\"box-sizing: border-box; font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px;\">实际类型在java.lang.reflect.Proxy.KeyFactory#apply,为Key1或者Key2或者KeyX或者object，取决于代理类实现的接口数量</td></tr><tr style=\"box-sizing: border-box; border-width: 1px 0px 0px; border-right-style: initial; border-bottom-style: initial; border-left-style: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: initial; border-image: initial; border-top-style: solid; border-top-color: rgb(221, 221, 221); background-color: rgb(247, 247, 247);\"><td style=\"box-sizing: border-box; font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px;\">value</td><td style=\"box-sizing: border-box; font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px;\">用于返回代理类(即Class&lt;?&gt;)</td><td style=\"box-sizing: border-box; font-size: 14px; color: rgb(79, 79, 79); line-height: 22px; padding: 8px;\">第一次存储实际类型为java.lang.reflect.WeakCache.Factory#Factory，之后取出时，都是java.lang.reflect.WeakCache.CacheValue</td></tr></tbody></table><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">那么为什么要用缓存,缓存的内容是什么<br/><span style=\"box-sizing: border-box; font-weight: 700;\"><em style=\"box-sizing: border-box;\">缓存就是在动态代理生成代理类时，只用生成一次后面尽量直接复用</em></span></p><h2 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 24px; line-height: 32px;\"><a style=\"color: rgb(78, 161, 219); outline: 0px; margin: 0px; padding: 0px; font-weight: 400; box-sizing: border-box;\"></a>3.实现机制</h2><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">java.lang.reflect.WeakCache#get</p><pre class=\"hljs javascript\" style=\"margin-top: 0px; margin-bottom: 24px; padding: 8px; box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(240, 240, 240); overflow-x: auto; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px;\">public&nbsp;V&nbsp;get(K&nbsp;key,&nbsp;P&nbsp;parameter)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Objects.requireNonNull(parameter);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expungeStaleEntries();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object&nbsp;cacheKey&nbsp;=&nbsp;CacheKey.valueOf(key,&nbsp;refQueue);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;lazily&nbsp;install&nbsp;the&nbsp;2nd&nbsp;level&nbsp;valuesMap&nbsp;for&nbsp;the&nbsp;particular&nbsp;cacheKey\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ConcurrentMap&lt;Object,&nbsp;Supplier&lt;V&gt;&gt;&nbsp;valuesMap&nbsp;=&nbsp;map.get(cacheKey);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(valuesMap&nbsp;==&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ConcurrentMap&lt;Object,&nbsp;Supplier&lt;V&gt;&gt;&nbsp;oldValuesMap\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;map.putIfAbsent(cacheKey,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valuesMap&nbsp;=&nbsp;new&nbsp;ConcurrentHashMap&lt;&gt;());&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(oldValuesMap&nbsp;!=&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valuesMap&nbsp;=&nbsp;oldValuesMap;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;create&nbsp;subKey&nbsp;and&nbsp;retrieve&nbsp;the&nbsp;possible&nbsp;Supplier&lt;V&gt;&nbsp;stored&nbsp;by&nbsp;that\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;subKey&nbsp;from&nbsp;valuesMap\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object&nbsp;subKey&nbsp;=&nbsp;Objects.requireNonNull(subKeyFactory.apply(key,&nbsp;parameter));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Supplier&lt;V&gt;&nbsp;supplier&nbsp;=&nbsp;valuesMap.get(subKey);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Factory&nbsp;factory&nbsp;=&nbsp;null;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(true)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(supplier&nbsp;!=&nbsp;null)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;supplier&nbsp;might&nbsp;be&nbsp;a&nbsp;Factory&nbsp;or&nbsp;a&nbsp;CacheValue&lt;V&gt;&nbsp;instance\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V&nbsp;value&nbsp;=&nbsp;supplier.get();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(value&nbsp;!=&nbsp;null)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;value;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;else&nbsp;no&nbsp;supplier&nbsp;in&nbsp;cache\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;or&nbsp;a&nbsp;supplier&nbsp;that&nbsp;returned&nbsp;null&nbsp;(could&nbsp;be&nbsp;a&nbsp;cleared&nbsp;CacheValue\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;or&nbsp;a&nbsp;Factory&nbsp;that&nbsp;wasn&#39;t&nbsp;successful&nbsp;in&nbsp;installing&nbsp;the&nbsp;CacheValue)\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;lazily&nbsp;construct&nbsp;a&nbsp;Factory\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(factory&nbsp;==&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;factory&nbsp;=&nbsp;new&nbsp;Factory(key,&nbsp;parameter,&nbsp;subKey,&nbsp;valuesMap);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(supplier&nbsp;==&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;supplier&nbsp;=&nbsp;valuesMap.putIfAbsent(subKey,&nbsp;factory);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(supplier&nbsp;==&nbsp;null)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;successfully&nbsp;installed&nbsp;Factory\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;supplier&nbsp;=&nbsp;factory;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;else&nbsp;retry&nbsp;with&nbsp;winning&nbsp;supplier\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(valuesMap.replace(subKey,&nbsp;supplier,&nbsp;factory))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;successfully&nbsp;replaced\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;cleared&nbsp;CacheEntry&nbsp;/&nbsp;unsuccessful&nbsp;Factory\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;with&nbsp;our&nbsp;Factory\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;supplier&nbsp;=&nbsp;factory;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;retry&nbsp;with&nbsp;current&nbsp;supplier\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;supplier&nbsp;=&nbsp;valuesMap.get(subKey);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">注意下面几点</p><h3 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 22px; line-height: 30px;\"><a style=\"color: rgb(78, 161, 219); outline: 0px; margin: 0px; padding: 0px; font-weight: 400; box-sizing: border-box;\"></a>3.1 ConcurrentMap的get以及putIfAbsent的使用</h3><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">可以看到有几处代码，形如</p><pre class=\"hljs javascript\" style=\"margin-top: 0px; margin-bottom: 24px; padding: 8px; box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(240, 240, 240); overflow-x: auto; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px;\">ConcurrentMap&lt;Object,&nbsp;Supplier&lt;V&gt;&gt;&nbsp;valuesMap&nbsp;=&nbsp;map.get(cacheKey);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(valuesMap&nbsp;==&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ConcurrentMap&lt;Object,&nbsp;Supplier&lt;V&gt;&gt;&nbsp;oldValuesMap\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;map.putIfAbsent(cacheKey,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valuesMap&nbsp;=&nbsp;new&nbsp;ConcurrentHashMap&lt;&gt;());&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(oldValuesMap&nbsp;!=&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valuesMap&nbsp;=&nbsp;oldValuesMap;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">这个是为了保证在多线程下，去获取同一个key，拿到的是同一个引用对象<br/>可以理解像单例模式里面要判断两次，来保证不会多次生成对象</p><pre class=\"hljs java\" style=\"margin-top: 0px; margin-bottom: 24px; padding: 8px; box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(240, 240, 240); overflow-x: auto; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px;\">if(instance==null)&nbsp;{\r\n&nbsp;&nbsp;synchronize(XXX.class)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;if(instance==null){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instance&nbsp;=&nbsp;new&nbsp;XXX();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;}\r\n}</pre><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">可以参考<a href=\"https://link.jianshu.com/?t=http%3A%2F%2Fwxl24life.iteye.com%2Fblog%2F1746794\" target=\"_blank\" style=\"color: rgb(103, 149, 181); outline: 0px; margin: 0px; padding: 0px; box-sizing: border-box; text-decoration-line: none;\">http://wxl24life.iteye.com/blog/1746794</a></p><h3 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 22px; line-height: 30px;\"><a style=\"color: rgb(78, 161, 219); outline: 0px; margin: 0px; padding: 0px; font-weight: 400; box-sizing: border-box;\"></a>3.2 为什么说第一次valuesMap里面value的实际类型和之后不一样</h3><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">根据Supplier&lt;V&gt; supplier = valuesMap.get(subKey);中supplier值以及在while循环第几次，按照时间先后考虑</p><h4 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 20px; line-height: 28px;\">3.2.1 supplier==null,第一次while循环</h4><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">这种出现在第一次请求中，二级缓存没有该key</p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">逻辑为</p><pre class=\"hljs java\" style=\"margin-top: 0px; margin-bottom: 24px; padding: 8px; box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(240, 240, 240); overflow-x: auto; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px;\">supplier&nbsp;=&nbsp;valuesMap.putIfAbsent(subKey,&nbsp;factory);if&nbsp;(supplier&nbsp;==&nbsp;null)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;successfully&nbsp;installed&nbsp;Factory\r\n&nbsp;&nbsp;&nbsp;&nbsp;supplier&nbsp;=&nbsp;factory;\r\n}</pre><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">此时valuesMap里面的key是subKey<br/>subKey是</p><pre class=\"hljs javascript\" style=\"margin-top: 0px; margin-bottom: 24px; padding: 8px; box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(240, 240, 240); overflow-x: auto; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px;\">Object&nbsp;subKey&nbsp;=&nbsp;Objects.requireNonNull(subKeyFactory.apply(key,&nbsp;parameter));</pre><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">根据java.lang.reflect.Proxy.KeyFactory#apply<br/>subKey实际类型是Key1,Key2,Object或者KeyX，根据实现的接口数量决定</p><pre class=\"hljs php\" style=\"margin-top: 0px; margin-bottom: 24px; padding: 8px; box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(240, 240, 240); overflow-x: auto; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px;\">private&nbsp;static&nbsp;final&nbsp;class&nbsp;KeyFactory\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;implements&nbsp;BiFunction&lt;ClassLoader,&nbsp;Class&lt;?&gt;[],&nbsp;Object&gt;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Object&nbsp;apply(ClassLoader&nbsp;classLoader,&nbsp;Class&lt;?&gt;[]&nbsp;interfaces)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(interfaces.length)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;1:&nbsp;return&nbsp;new&nbsp;Key1(interfaces[0]);&nbsp;//&nbsp;the&nbsp;most&nbsp;frequent\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;2:&nbsp;return&nbsp;new&nbsp;Key2(interfaces[0],&nbsp;interfaces[1]);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;0:&nbsp;return&nbsp;key0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:&nbsp;return&nbsp;new&nbsp;KeyX(interfaces);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}</pre><h4 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 20px; line-height: 28px;\">3.2.2 supplier==null,第二次while循环(或者因其他原因，第n次while循环)</h4><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">这种出现在第一次请求中，二级缓存没有该key,supplier被赋值之后<br/>逻辑为</p><pre class=\"hljs java\" style=\"margin-top: 0px; margin-bottom: 24px; padding: 8px; box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(240, 240, 240); overflow-x: auto; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px;\">if&nbsp;(supplier&nbsp;!=&nbsp;null)&nbsp;{&nbsp;&nbsp;//&nbsp;supplier&nbsp;might&nbsp;be&nbsp;a&nbsp;Factory&nbsp;or&nbsp;a&nbsp;CacheValue&lt;V&gt;&nbsp;instance\r\n&nbsp;&nbsp;V&nbsp;value&nbsp;=&nbsp;supplier.get();&nbsp;&nbsp;if&nbsp;(value&nbsp;!=&nbsp;null)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;value;\r\n&nbsp;&nbsp;}\r\n&nbsp;}</pre><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">supplier在第一次循环时，已经为factory了，这里调用get方法，就是进入<br/>java.lang.reflect.WeakCache.Factory#get的逻辑</p><pre class=\"hljs java\" style=\"margin-top: 0px; margin-bottom: 24px; padding: 8px; box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(240, 240, 240); overflow-x: auto; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;synchronized&nbsp;V&nbsp;get()&nbsp;{&nbsp;//&nbsp;serialize&nbsp;access\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;re-check\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Supplier&lt;V&gt;&nbsp;supplier&nbsp;=&nbsp;valuesMap.get(subKey);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(supplier&nbsp;!=&nbsp;this)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//supplier和当前supplier不等，验证不正确\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V&nbsp;value&nbsp;=&nbsp;null;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//生成代理类对应的Class&lt;?&gt;信息\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value&nbsp;=&nbsp;Objects.requireNonNull(valueFactory.apply(key,&nbsp;parameter));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;finally&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(value&nbsp;==&nbsp;null)&nbsp;{&nbsp;//&nbsp;remove&nbsp;us&nbsp;on&nbsp;failure\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valuesMap.remove(subKey,&nbsp;this);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assert&nbsp;value&nbsp;!=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CacheValue&lt;V&gt;&nbsp;cacheValue&nbsp;=&nbsp;new&nbsp;CacheValue&lt;&gt;(value);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//把之前二级缓存的value替换为当前的CacheValue\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(valuesMap.replace(subKey,&nbsp;this,&nbsp;cacheValue))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;put&nbsp;also&nbsp;in&nbsp;reverseMap\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reverseMap.put(cacheValue,&nbsp;Boolean.TRUE);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;AssertionError(&quot;Should&nbsp;not&nbsp;reach&nbsp;here&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;value;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">其中， value = Objects.requireNonNull(valueFactory.apply(key, parameter));就是代理类</p><pre class=\"hljs cpp\" style=\"margin-top: 0px; margin-bottom: 24px; padding: 8px; box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(240, 240, 240); overflow-x: auto; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px;\">java.lang.reflect.Proxy.ProxyClassFactory#apply&nbsp;//返回Class&lt;?&gt;//具体生成细节参考上一节</pre><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">在生成value之后</p><pre class=\"hljs cpp\" style=\"margin-top: 0px; margin-bottom: 24px; padding: 8px; box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(240, 240, 240); overflow-x: auto; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px;\">//把当前的值即this(类型为Factory)替换为了cacheValue(类型CacheValue)valuesMap.replace(subKey,&nbsp;this,&nbsp;cacheValue)</pre><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">并且这一次get()最终返回的是value;也就是Class&lt;?&gt;</p><h4 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 20px; line-height: 28px;\">3.2.3 supplier!=null</h4><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">出现在之后的某一次请求中，二级缓存已经有该key-value</p><pre class=\"hljs java\" style=\"margin-top: 0px; margin-bottom: 24px; padding: 8px; box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(240, 240, 240); overflow-x: auto; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px;\">if&nbsp;(supplier&nbsp;!=&nbsp;null)&nbsp;{&nbsp;&nbsp;//&nbsp;supplier&nbsp;might&nbsp;be&nbsp;a&nbsp;Factory&nbsp;or&nbsp;a&nbsp;CacheValue&lt;V&gt;&nbsp;instance\r\n&nbsp;&nbsp;V&nbsp;value&nbsp;=&nbsp;supplier.get();&nbsp;&nbsp;if&nbsp;(value&nbsp;!=&nbsp;null)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;value;\r\n&nbsp;&nbsp;}\r\n&nbsp;}</pre><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">此时，supplier的类型为CacheValue<br/>在Factory#get中生成时，就是<br/>CacheValue&lt;V&gt; cacheValue = new CacheValue&lt;&gt;(value);<br/>CacheValue#get方法，最终转入java.lang.ref.Reference#get，返回的就是这个value，即构造函数的参数value</p><h3 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 22px; line-height: 30px;\"><a style=\"color: rgb(78, 161, 219); outline: 0px; margin: 0px; padding: 0px; font-weight: 400; box-sizing: border-box;\"></a>3.3缓存的过期机制</h3><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">这里用了java.lang.reflect.WeakCache.CacheKey是继承WeakReference的<br/>即弱引用，在java gc中，满足适当的条件时，当一个referent是ROOT可达且为弱引用时，会将其放入对应的referenceQueue。<br/>核心函数在</p><pre class=\"hljs cpp\" style=\"margin-top: 0px; margin-bottom: 24px; padding: 8px; box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(240, 240, 240); overflow-x: auto; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; line-height: 22px;\">private&nbsp;void&nbsp;expungeStaleEntries()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CacheKey&lt;K&gt;&nbsp;cacheKey;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;((cacheKey&nbsp;=&nbsp;(CacheKey&lt;K&gt;)refQueue.poll())&nbsp;!=&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cacheKey.expungeFrom(map,&nbsp;reverseMap);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">可能会奇怪这里并没有refQueue的enqueue操作，这个操作是java gc的时候做的，这里不深究。<br/>只要知道gc时，某些场景会进行refQueue的enqueue即可。<br/>那么，之后再调用expungeStaleEntries()就能清除过期的缓存。</p><h2 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 24px; line-height: 32px;\"><a style=\"color: rgb(78, 161, 219); outline: 0px; margin: 0px; padding: 0px; font-weight: 400; box-sizing: border-box;\"></a>4. 思考</h2><h3 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 22px; line-height: 30px;\"><a style=\"color: rgb(78, 161, 219); outline: 0px; margin: 0px; padding: 0px; font-weight: 400; box-sizing: border-box;\"></a>4.1 为什么要二级缓存</h3><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">一级缓存用来区分classLoader,二级缓存用来区分实现的接口<br/>生成类的缓存是按照ClassLoader来划分的，这是因为类的区分不仅根据类名还根据装载类的ClassLoader，也就是说同一个类被不同的ClassLoader加载，那么它们也是不同的.<br/>参考<br/><a href=\"https://link.jianshu.com/?t=http%3A%2F%2Fwww.cnblogs.com%2Fcruze%2Fp%2F3843996.html\" target=\"_blank\" style=\"color: rgb(103, 149, 181); outline: 0px; margin: 0px; padding: 0px; box-sizing: border-box; text-decoration-line: none;\">http://www.cnblogs.com/cruze/p/3843996.html</a><br/><a href=\"https://link.jianshu.com/?t=http%3A%2F%2Fdocs.oracle.com%2Fjavase%2Fspecs%2Fjvms%2Fse7%2Fhtml%2Fjvms-5.html%23jvms-5.3\" target=\"_blank\" style=\"color: rgb(103, 149, 181); outline: 0px; margin: 0px; padding: 0px; box-sizing: border-box; text-decoration-line: none;\">http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-5.html#jvms-5.3</a></p><h3 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 22px; line-height: 30px;\"><a style=\"color: rgb(78, 161, 219); outline: 0px; margin: 0px; padding: 0px; font-weight: 400; box-sizing: border-box;\"></a>4.2 ConcurrentHashMap想要获取SingleValue的方法(严格来说是同一个引用)</h3><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">如果putIfAbsent返回值不为null,那么返回该值，不要重新put<br/><a href=\"https://link.jianshu.com/?t=http%3A%2F%2Fwxl24life.iteye.com%2Fblog%2F1746794\" target=\"_blank\" style=\"color: rgb(103, 149, 181); outline: 0px; margin: 0px; padding: 0px; box-sizing: border-box; text-decoration-line: none;\">http://wxl24life.iteye.com/blog/1746794</a></p><h3 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 22px; line-height: 30px;\"><a style=\"color: rgb(78, 161, 219); outline: 0px; margin: 0px; padding: 0px; font-weight: 400; box-sizing: border-box;\"></a>4.3 二级缓存valueMaps的value的类型不一样</h3><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">第一次是Factory，调用get()时，生成代理类信息之后，将CacheValue作为值替换了当前key对应的value<br/>之后调用，都是CacheValue.get()返回java.lang.ref.Reference#get，最终就是CacheValue的构造函数参数，即代理类信息Class&lt;?&gt;</p><h3 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 22px; line-height: 30px;\"><a style=\"color: rgb(78, 161, 219); outline: 0px; margin: 0px; padding: 0px; font-weight: 400; box-sizing: border-box;\"></a>4.4 一级缓存的key-value与二级缓存的key-value</h3><h3 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 22px; line-height: 30px;\"><a style=\"color: rgb(78, 161, 219); outline: 0px; margin: 0px; padding: 0px; font-weight: 400; box-sizing: border-box;\"></a>4.5 在&#39;背景&#39;中提出的问题，在上文中都有解释</h3><h3 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 22px; line-height: 30px;\"><a style=\"color: rgb(78, 161, 219); outline: 0px; margin: 0px; padding: 0px; font-weight: 400; box-sizing: border-box;\"></a>4.6 缓存的过期机制</h3><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">利用java.lang.reflect.WeakCache.CacheKey继承WeakReference，配合ReferenceQueue使用。<br/>在java gc时某些条件下触发。</p><h2 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 24px; line-height: 32px;\"><a style=\"color: rgb(78, 161, 219); outline: 0px; margin: 0px; padding: 0px; font-weight: 400; box-sizing: border-box;\"></a>5.暂时不明白的问题</h2><h3 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 22px; line-height: 30px;\"><a style=\"color: rgb(78, 161, 219); outline: 0px; margin: 0px; padding: 0px; font-weight: 400; box-sizing: border-box;\"></a>5.1 reverseMap的value有什么用?</h3><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">感觉纯粹是利用ConcurrentHashMap的&quot;Concurrent&quot;的特性，value并没有什么用，代码里面并没有处理里面的value，都是Boolean.TRUE;</p><h3 style=\"margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); font-size: 22px; line-height: 30px;\"><a style=\"color: rgb(78, 161, 219); outline: 0px; margin: 0px; padding: 0px; font-weight: 400; box-sizing: border-box;\"></a>5.2 实现二级缓存的逻辑为什么要这么写,不能一步到位吗?</h3><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify;\">为什么先放入Factory，调用Factory.get时进行replace操作再放入CacheValue，不能一步到位写入CacheValue后面直接用吗</p><p><br/></p>', '16,19', '1', '1', '', '0', '2018-04-16 16:34:44', '2018-04-23 19:25:12', '1', null, '20', '0', '1', '28', '0', 'http://sports.qq.com/a/20180417/002832.htm');
INSERT INTO `tb_blog_article` VALUES ('1523883252350', '弹层组件文档 - layui.layer', 'layer 至今仍作为 layui 的代表作，她的受众广泛并非偶然，而是这数年来的坚持、不弃的执念，将那些不屑的眼光转化为应得的尊重，不断完善和维护、不断建设和提升社区服务，在 Web 开发者的圈子里口口相传，乃至于成为今天的 layui 最强劲的源动力。目前，layer已成为国内最多人使用的 Web 弹层组件，GitHub 自然Stars5000+，官网累计下载量达50w+，大概有30万不同规模的 Web 平台使用过 layer。 之所以列举上面这些数字，并非是在夸夸其谈，而是懂 layer ', '<blockquote class=\"layui-elem-quote site-text\" style=\"margin: 0px 0px 10px; padding: 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px; border-left: 5px solid rgb(0, 150, 136); border-radius: 0px 2px 2px 0px; background-color: rgb(242, 242, 242); position: relative; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, 微软雅黑, Tahoma, Arial, sans-serif; font-size: 14px; white-space: normal;\">layer 至今仍作为 layui 的代表作，她的受众广泛并非偶然，而是这数年来的坚持、不弃的执念，将那些不屑的眼光转化为应得的尊重，不断完善和维护、不断建设和提升社区服务，在 Web 开发者的圈子里口口相传，乃至于成为今天的 layui 最强劲的源动力。目前，<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">layer已成为国内最多人使用的 Web 弹层组件</em>，<a href=\"https://github.com/sentsin/layer\" target=\"_blank\" style=\"color: rgb(1, 170, 237); text-decoration-line: none;\">GitHub</a>&nbsp;自然Stars<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">5000+</em>，官网累计下载量达50w+，大概有30万不同规模的 Web 平台使用过 layer。&nbsp;<br/><br/>之所以列举上面这些数字，并非是在夸夸其谈，而是懂 layer 的人都知道，这是一种怎样不易的沉淀。而由于 layer 在 layui 体系中的位置比较特殊，甚至让很多人都误以为 layui = layer ui，所以再次强调 layer 只是作为 layui 的一个弹层模块，由于其用户基数较大，所以至今仍把她作为独立组件来维护。不过请注意：无论是独立的 layer，还是作为内置模块的 layer，文档都以本页为准。</blockquote><blockquote class=\"layui-elem-quote site-text\" style=\"margin: 0px 0px 10px; padding: 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px; border-left: 5px solid rgb(0, 150, 136); border-radius: 0px 2px 2px 0px; background-color: rgb(242, 242, 242); position: relative; font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, 微软雅黑, Tahoma, Arial, sans-serif; font-size: 14px; white-space: normal;\">模块加载名称：<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">layer</em>，独立版本：<a href=\"http://layer.layui.com/\" target=\"_blank\" style=\"color: rgb(1, 170, 237); text-decoration-line: none;\">layer.layui.com</a></blockquote><p><a style=\"color: rgb(51, 51, 51);\">使用场景</a></p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">由于layer可以独立使用，也可以通过Layui模块化使用。所以请按照你的实际需求来选择。</p><table class=\"layui-table\" width=\"898\"><thead><tr style=\"transition: all 0.3s; background-color: rgb(242, 242, 242);\" class=\"firstRow\"><th style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-align: left; font-weight: 400; border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px; width: 150px;\">场景</th><th style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-align: left; font-weight: 400; border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px; width: 450px;\">用前准备</th><th style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-align: left; font-weight: 400; border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">调用方式</th></tr></thead><tbody><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">1. 作为独立组件使用</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">如果你只是单独想使用 layer，你可以去&nbsp;<a href=\"http://layer.layui.com/\" target=\"_blank\" style=\"color: rgb(1, 170, 237); text-decoration-line: none;\">layer</a>&nbsp;独立版本官网下载组件包。你需要在你的页面引入<em style=\"padding: 0px 3px;\">jQuery</em>1.8以上的任意版本，并引入<em style=\"padding: 0px 3px;\">layer.js</em>。</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">通过script标签引入layer.js后，直接用即可。 参考：<a href=\"http://layer.layui.com/hello.html\" target=\"_blank\" style=\"color: rgb(1, 170, 237); text-decoration-line: none;\">快速上手</a></td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">2. layui 模块化使用</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">如果你使用的是 layui，那么你直接在官网下载 layui 框架即可，无需引入 jQuery 和 layer.js，但需要引入<em style=\"padding: 0px 3px;\">layui.css</em>和<em style=\"padding: 0px 3px;\">layui.js</em></td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">通过<em style=\"padding: 0px 3px;\">layui.use(&#39;layer&#39;, callback)</em>加载模块</td></tr><tr style=\"transition: all 0.3s;\"><td><br/></td><td><br/></td><td><br/></td></tr></tbody></table><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">作为独立组件使用&nbsp;layerlayui.code引入好layer.js后，直接用即可&lt;script&nbsp;src=&quot;layer.js&quot;&gt;&lt;/script&gt;&lt;script&gt;layer.msg(&#39;hello&#39;);&lt;/script&gt;</pre><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">在&nbsp;layui&nbsp;中使用&nbsp;layerlayui.codelayui.use(&#39;layer&#39;,&nbsp;function(){var&nbsp;layer&nbsp;=&nbsp;layui.layer;layer.msg(&#39;hello&#39;);});</pre><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">除了上面有所不同，其它都完全一致。</p><p><a style=\"color: rgb(51, 51, 51);\">基础参数</a></p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">我们提到的基础参数主要指调用方法时用到的配置项，如：<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">layer.open({content: &#39;&#39;})</em><em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">layer.msg(&#39;&#39;, {time: 3})</em>等，其中的content和time即是基础参数，以键值形式存在，基础参数<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">可合理应用于任何层类型中</em>，您不需要所有都去配置，大多数都是可选的。而其中的layer.open、layer.msg就是内置方法。注意，从2.3开始，无需通过layer.config来加载拓展模块</p><ul style=\"margin: 0px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, 微软雅黑, Tahoma, Arial, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><p><a style=\"color: rgb(51, 51, 51);\">type</a>&nbsp;- 基本层类型</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Number，默认：0</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">layer提供了5种层类型。可传入的值有：<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">0</em>（信息框，默认）<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">1</em>（页面层）<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">2</em>（iframe层）<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">3</em>（加载层）<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">4</em>（tips层）。 若你采用<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">layer.open({type: 1})</em>方式调用，则type为必填项（信息框除外）</p></li><p><a style=\"color: rgb(51, 51, 51);\">title</a>&nbsp;- 标题</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：String/Array/Boolean，默认：&#39;信息&#39;</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">title支持三种类型的值，若你传入的是普通的字符串，如<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">title :&#39;我是标题&#39;</em>，那么只会改变标题文本；若你还需要自定义标题区域样式，那么你可以<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">title: [&#39;文本&#39;, &#39;font-size:18px;&#39;]</em>，数组第二项可以写任意css样式；如果你不想显示标题栏，你可以<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">title: false</em></p></li><p><a style=\"color: rgb(51, 51, 51);\">content</a>&nbsp;- 内容</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：String/DOM/Array，默认：&#39;&#39;</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">content可传入的值是灵活多变的，不仅可以传入普通的html内容，还可以指定DOM，更可以随着type的不同而不同。譬如：</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code/!*如果是页面层*/layer.open({type:&nbsp;1,content:&nbsp;&#39;传入任意的文本或html&#39;&nbsp;//这里content是一个普通的String});layer.open({type:&nbsp;1,content:&nbsp;$(&#39;#id&#39;)&nbsp;//这里content是一个DOM，注意：最好该元素要存放在body最外层，否则可能被其它的相对元素所影响});//Ajax获取$.post(&#39;url&#39;,&nbsp;{},&nbsp;function(str){layer.open({type:&nbsp;1,content:&nbsp;str&nbsp;//注意，如果str是object，那么需要字符拼接。});});/!*如果是iframe层*/layer.open({type:&nbsp;2,content:&nbsp;&#39;http://sentsin.com&#39;&nbsp;//这里content是一个URL，如果你不想让iframe出现滚动条，你还可以content:&nbsp;[&#39;http://sentsin.com&#39;,&nbsp;&#39;no&#39;]});/!*如果是用layer.open执行tips层*/layer.open({type:&nbsp;4,content:&nbsp;[&#39;内容&#39;,&nbsp;&#39;#id&#39;]&nbsp;//数组第二项即吸附元素选择器或者DOM});</pre></li><p><a style=\"color: rgb(51, 51, 51);\">skin</a>&nbsp;- 样式类名</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：String，默认：&#39;&#39;</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">skin不仅允许你传入layer内置的样式class名，还可以传入您自定义的class名。这是一个很好的切入点，意味着你可以借助skin轻松完成不同的风格定制。目前layer内置的skin有：<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">layui-layer-lan</em><em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">layui-layer-molv</em>，未来我们还会选择性地内置更多，但更推荐您自己来定义。以下是一个自定义风格的简单例子</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code//单个使用layer.open({skin:&nbsp;&#39;demo-class&#39;});//全局使用。即所有弹出层都默认采用，但是单个配置skin的优先级更高layer.config({skin:&nbsp;&#39;demo-class&#39;})//CSSbody&nbsp;.demo-class&nbsp;.layui-layer-title{background:#c00;&nbsp;color:#fff;&nbsp;border:&nbsp;none;}body&nbsp;.demo-class&nbsp;.layui-layer-btn{border-top:1px&nbsp;solid&nbsp;#E9E7E7}body&nbsp;.demo-class&nbsp;.layui-layer-btn&nbsp;a{background:#333;}body&nbsp;.demo-class&nbsp;.layui-layer-btn&nbsp;.layui-layer-btn1{background:#999;}…加上body是为了保证优先级。你可以借助Chrome调试工具，定义更多样式控制层更多的区域。</pre><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">你也可以<a class=\"layer-btn\" href=\"http://layer.layui.com/skin.html#publish\" target=\"_blank\" style=\"color: rgb(1, 170, 237); text-decoration-line: none;\">去查看layer皮肤制作说明</a></p></li><p><a style=\"color: rgb(51, 51, 51);\">area</a>&nbsp;- 宽高</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：String/Array，默认：&#39;auto&#39;</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">在默认状态下，layer是宽高都自适应的，但当你只想定义宽度时，你可以<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">area: &#39;500px&#39;</em>，高度仍然是自适应的。当你宽高都要定义时，你可以<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">area: [&#39;500px&#39;, &#39;300px&#39;]</em></p></li><p><a style=\"color: rgb(51, 51, 51);\">offset</a>&nbsp;- 坐标</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：String/Array，默认：垂直水平居中</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">offset默认情况下不用设置。但如果你不想垂直水平居中，你还可以进行以下赋值：</p><table class=\"layui-table\" width=\"898\"><thead><tr style=\"transition: all 0.3s; background-color: rgb(242, 242, 242);\" class=\"firstRow\"><th style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-align: left; font-weight: 400; border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">值</th><th style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-align: left; font-weight: 400; border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">备注</th></tr></thead><tbody><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">offset: &#39;auto&#39;</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">默认坐标，即垂直水平居中</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">offset: &#39;100px&#39;</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">只定义top坐标，水平保持居中</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">offset: [&#39;100px&#39;, &#39;50px&#39;]</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">同时定义top、left坐标</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">offset: &#39;t&#39;</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">快捷设置顶部坐标</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">offset: &#39;r&#39;</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">快捷设置右边缘坐标</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">offset: &#39;b&#39;</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">快捷设置底部坐标</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">offset: &#39;l&#39;</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">快捷设置左边缘坐标</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">offset: &#39;lt&#39;</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">快捷设置左上角</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">offset: &#39;lb&#39;</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">快捷设置左下角</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">offset: &#39;rt&#39;</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">快捷设置右上角</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">offset: &#39;rb&#39;</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">快捷设置右下角</td></tr></tbody></table></li><p><a style=\"color: rgb(51, 51, 51);\">icon</a>&nbsp;- 图标。信息框和加载层的私有参数</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Number，默认：-1（信息框）/0（加载层）</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">信息框默认不显示图标。当你想显示图标时，默认皮肤可以传入<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">0-6</em>如果是加载层，可以传入<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">0-2</em>。如：</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code//eg1layer.alert(&#39;酷毙了&#39;,&nbsp;{icon:&nbsp;1});//eg2layer.msg(&#39;不开心。。&#39;,&nbsp;{icon:&nbsp;5});//eg3layer.load(1);&nbsp;//风格1的加载</pre></li><p><a style=\"color: rgb(51, 51, 51);\">btn</a>&nbsp;- 按钮</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：String/Array，默认：&#39;确认&#39;</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">信息框模式时，btn默认是一个确认按钮，其它层类型则默认不显示，加载层和tips层则无效。当您只想自定义一个按钮时，你可以<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">btn: &#39;我知道了&#39;</em>，当你要定义两个按钮时，你可以<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">btn: [&#39;yes&#39;, &#39;no&#39;]</em>。当然，你也可以定义更多按钮，比如：<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">btn: [&#39;按钮1&#39;, &#39;按钮2&#39;, &#39;按钮3&#39;, …]</em>，按钮1的回调是yes，而从按钮2开始，则回调为btn2: function(){}，以此类推。如：</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code//eg1layer.confirm(&#39;纳尼？&#39;,&nbsp;{btn:&nbsp;[&#39;按钮一&#39;,&nbsp;&#39;按钮二&#39;,&nbsp;&#39;按钮三&#39;]&nbsp;//可以无限个按钮,btn3:&nbsp;function(index,&nbsp;layero){//按钮【按钮三】的回调}},&nbsp;function(index,&nbsp;layero){//按钮【按钮一】的回调},&nbsp;function(index){//按钮【按钮二】的回调});//eg2layer.open({content:&nbsp;&#39;test&#39;,btn:&nbsp;[&#39;按钮一&#39;,&nbsp;&#39;按钮二&#39;,&nbsp;&#39;按钮三&#39;],yes:&nbsp;function(index,&nbsp;layero){//按钮【按钮一】的回调},btn2:&nbsp;function(index,&nbsp;layero){//按钮【按钮二】的回调//return&nbsp;false&nbsp;开启该代码可禁止点击该按钮关闭},btn3:&nbsp;function(index,&nbsp;layero){//按钮【按钮三】的回调//return&nbsp;false&nbsp;开启该代码可禁止点击该按钮关闭},cancel:&nbsp;function(){//右上角关闭回调//return&nbsp;false&nbsp;开启该代码可禁止点击该按钮关闭}});</pre></li><p><a style=\"color: rgb(51, 51, 51);\">btnAlign</a>&nbsp;- 按钮排列</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：String，默认：r</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">你可以快捷定义按钮的排列位置，btnAlign的默认值为r，即右对齐。该参数可支持的赋值如下：</p><table class=\"layui-table\" width=\"898\"><thead><tr style=\"transition: all 0.3s; background-color: rgb(242, 242, 242);\" class=\"firstRow\"><th style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-align: left; font-weight: 400; border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">值</th><th style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-align: left; font-weight: 400; border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">备注</th></tr></thead><tbody><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">btnAlign: &#39;l&#39;</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">按钮左对齐</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">btnAlign: &#39;c&#39;</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">按钮居中对齐</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">btnAlign: &#39;r&#39;</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">按钮右对齐。默认值，不用设置</td></tr><tr style=\"transition: all 0.3s;\"><td><br/></td><td><br/></td></tr></tbody></table></li><p><a style=\"color: rgb(51, 51, 51);\">closeBtn</a>&nbsp;- 关闭按钮</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：String/Boolean，默认：1</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">layer提供了两种风格的关闭按钮，可通过配置<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">1</em>和<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">2</em>来展示，如果不显示，则<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">closeBtn: 0</em></p></li><p><a style=\"color: rgb(51, 51, 51);\">shade</a>&nbsp;- 遮罩</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：String/Array/Boolean，默认：0.3</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">即弹层外区域。默认是0.3透明度的黑色背景（&#39;#000&#39;）。如果你想定义别的颜色，可以<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">shade: [0.8, &#39;#393D49&#39;]</em>；如果你不想显示遮罩，可以<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">shade: 0</em></p></li><p><a style=\"color: rgb(51, 51, 51);\">shadeClose</a>&nbsp;- 是否点击遮罩关闭</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Boolean，默认：false</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">如果你的shade是存在的，那么你可以设定shadeClose来控制点击弹层外区域关闭。</p></li><p><a style=\"color: rgb(51, 51, 51);\">time</a>&nbsp;- 自动关闭所需毫秒</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Number，默认：0</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">默认不会自动关闭。当你想自动关闭时，可以<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">time: 5000</em>，即代表5秒后自动关闭，注意单位是毫秒（1秒=1000毫秒）</p></li><p><a style=\"color: rgb(51, 51, 51);\">id</a>&nbsp;- 用于控制弹层唯一标识</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：String，默认：空字符</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">设置该值后，不管是什么类型的层，都只允许同时弹出一个。一般用于页面层和iframe层模式</p></li><p><a style=\"color: rgb(51, 51, 51);\">anim</a>&nbsp;- 弹出动画</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Number，默认：0</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">我们的出场动画全部采用CSS3。这意味着除了ie6-9，其它所有浏览器都是支持的。目前anim可支持的动画类型有<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">0-6</em>&nbsp;如果不想显示动画，设置 anim: -1 即可。另外需要注意的是，3.0之前的版本用的是&nbsp;<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">shift</em>&nbsp;参数</p></li><table class=\"layui-table\" width=\"898\"><thead><tr style=\"transition: all 0.3s; background-color: rgb(242, 242, 242);\" class=\"firstRow\"><th style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-align: left; font-weight: 400; border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">值</th><th style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-align: left; font-weight: 400; border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">备注</th></tr></thead><tbody><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">anim: 0</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">平滑放大。默认</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">anim: 1</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">从上掉落</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">anim: 2</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">从最底部往上滑入</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">anim: 3</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">从左滑入</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">anim: 4</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">从左翻滚</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">anim: 5</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">渐显</td></tr><tr style=\"transition: all 0.3s;\"><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">anim: 6</td><td style=\"margin: 0px; padding: 9px 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-color: rgb(230, 230, 230); position: relative; min-height: 20px; line-height: 20px;\">抖动</td></tr></tbody></table><p><a style=\"color: rgb(51, 51, 51);\">isOutAnim</a>&nbsp;- 关闭动画 （layer 3.0.3新增）</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Boolean，默认：true</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">默认情况下，关闭层时会有一个过度动画。如果你不想开启，设置 isOutAnim: false 即可</p></li><p><a style=\"color: rgb(51, 51, 51);\">maxmin</a>&nbsp;- 最大最小化。</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Boolean，默认：false</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">该参数值对<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">type:1</em>和<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">type:2</em>有效。默认不显示最大小化按钮。需要显示配置<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">maxmin: true</em>即可</p></li><p><a style=\"color: rgb(51, 51, 51);\">fixed</a>&nbsp;- 固定</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Boolean，默认：true</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">即鼠标滚动时，层是否固定在可视区域。如果不想，设置<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">fixed: false</em>即可</p></li><p><a style=\"color: rgb(51, 51, 51);\">resize</a>&nbsp;- 是否允许拉伸</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Boolean，默认：true</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">默认情况下，你可以在弹层右下角拖动来拉伸尺寸。如果对指定的弹层屏蔽该功能，设置 false即可。该参数对loading、tips层无效</p></li><p><a style=\"color: rgb(51, 51, 51);\">resizing</a>&nbsp;- 监听窗口拉伸动作</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Function，默认：null</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">当你拖拽弹层右下角对窗体进行尺寸调整时，如果你设定了该回调，则会执行。回调返回一个参数：当前层的DOM对象</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.coderesizing:&nbsp;function(layero){console.log(layero);}</pre></li><p><a style=\"color: rgb(51, 51, 51);\">scrollbar</a>&nbsp;- 是否允许浏览器出现滚动条</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Boolean，默认：true</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">默认允许浏览器滚动，如果设定<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">scrollbar: false</em>，则屏蔽</p></li><p><a style=\"color: rgb(51, 51, 51);\">maxWidth</a>&nbsp;- 最大宽度</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Number，默认：360</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">请注意：只有当<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">area: &#39;auto&#39;</em>时，maxWidth的设定才有效。</p></li><p><a style=\"color: rgb(51, 51, 51);\">maxHeight</a>&nbsp;- 最大高度</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Number，默认：无</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">请注意：只有当高度自适应时，maxHeight的设定才有效。</p></li><p><a style=\"color: rgb(51, 51, 51);\">zIndex</a>&nbsp;- 层叠顺序</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：，默认：19891014（贤心生日 0.0）</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">一般用于解决和其它组件的层叠冲突。</p></li><p><a style=\"color: rgb(51, 51, 51);\">move</a>&nbsp;- 触发拖动的元素</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：String/DOM/Boolean，默认：&#39;.layui-layer-title&#39;</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">默认是触发标题区域拖拽。如果你想单独定义，指向元素的选择器或者DOM即可。如<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">move: &#39;.mine-move&#39;</em>。你还配置设定<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">move: false</em>来禁止拖拽</p></li><p><a style=\"color: rgb(51, 51, 51);\">moveOut</a>&nbsp;- 是否允许拖拽到窗口外</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Boolean，默认：false</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">默认只能在窗口内拖拽，如果你想让拖到窗外，那么设定<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">moveOut: true</em>即可</p></li><p><a style=\"color: rgb(51, 51, 51);\">moveEnd</a>&nbsp;- 拖动完毕后的回调方法</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Function，默认：null</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">默认不会触发moveEnd，如果你需要，设定<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">moveEnd: function(layero){}</em>即可。其中layero为当前层的DOM对象</p></li><p><a style=\"color: rgb(51, 51, 51);\">tips</a>&nbsp;- tips方向和颜色</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Number/Array，默认：2</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">tips层的私有参数。支持<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">上</em><em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">右</em><em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">下</em><em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">左</em>四个方向，通过<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">1-4</em>进行方向设定。如<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">tips: 3</em>则表示在元素的下面出现。有时你还可能会定义一些颜色，可以设定<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">tips: [1, &#39;#c00&#39;]</em></p></li><p><a style=\"color: rgb(51, 51, 51);\">tipsMore</a>&nbsp;- 是否允许多个tips</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Boolean，默认：false</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">允许多个意味着不会销毁之前的tips层。通过<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">tipsMore: true</em>开启</p></li><p><a style=\"color: rgb(51, 51, 51);\">success</a>&nbsp;- 层弹出后的成功回调方法</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Function，默认：null</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">当你需要在层创建完毕时即执行一些语句，可以通过该回调。success会携带两个参数，分别是<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">当前层DOM</em><em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">当前层索引</em>。如：</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.codelayer.open({content:&nbsp;&#39;测试回调&#39;,success:&nbsp;function(layero,&nbsp;index){console.log(layero,&nbsp;index);}});</pre></li><p><a style=\"color: rgb(51, 51, 51);\">yes</a>&nbsp;- 确定按钮回调方法</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Function，默认：null</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">该回调携带两个参数，分别为当前层索引、当前层DOM对象。如：</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.codelayer.open({content:&nbsp;&#39;测试回调&#39;,yes:&nbsp;function(index,&nbsp;layero){//do&nbsp;somethinglayer.close(index);&nbsp;//如果设定了yes回调，需进行手工关闭}});</pre></li><p><a style=\"color: rgb(51, 51, 51);\">cancel</a>&nbsp;- 右上角关闭按钮触发的回调</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Function，默认：null</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">该回调携带两个参数，分别为：当前层索引参数（index）、当前层的DOM对象（layero），默认会自动触发关闭。如果不想关闭，<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">return false</em>即可，如；</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.codecancel:&nbsp;function(index,&nbsp;layero){if(confirm(&#39;确定要关闭么&#39;)){&nbsp;//只有当点击confirm框的确定时，该层才会关闭layer.close(index)}return&nbsp;false;}</pre></li><p><a style=\"color: rgb(51, 51, 51);\">end</a>&nbsp;- 层销毁后触发的回调</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Function，默认：null</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">无论是确认还是取消，只要层被销毁了，end都会执行，不携带任何参数。</p></li><p><a style=\"color: rgb(51, 51, 51);\">full/min/restore</a>&nbsp;-分别代表最大化、最小化、还原 后触发的回调</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类型：Function，默认：null</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">携带一个参数，即当前层DOM</p></li></ul><ul style=\"margin: 0px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, 微软雅黑, Tahoma, Arial, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><p><a style=\"color: rgb(51, 51, 51);\">layer.config(options)</a>&nbsp;- 初始化全局配置</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">这是一个可以重要也可以不重要的方法，重要的是，它的权利真的很大，尤其是在模块化加载layer时，你会发现你必须要用到它。它不仅可以配置一些诸如路径、加载的模块，甚至还可以决定整个弹层的默认参数。而说它不重要，是因为多数情况下，你会发现，你似乎不是那么十分需要它。但你真的需要认识一下这位伙计。</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">如果您是采用<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">seajs</em>或者<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">requirejs</em>加载layer，你需要执行该方法来完成初始化的配置。比如：</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.codelayer.config({path:&nbsp;&#39;/res/layer/&#39;&nbsp;//layer.js所在的目录，可以是绝对目录，也可以是相对目录});//这样的话，layer就会去加载一些它所需要的配件，比如css等。//当然，你即便不用seajs或者requirejs，也可以通过上述方式设定路径</pre><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">如果你是采用&lt;script src=&quot;?a.js&amp;layer.js&quot;&gt;这种合并的方式引入layer，那么您需要在script标签上加一个自定义属性merge=&quot;true&quot;。如：</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code&lt;script&nbsp;src=&quot;?a.js&amp;layer.js&quot;&nbsp;merge=&quot;true&quot;&gt;这样的话，layer就不会去自动去获取路径，但你需要通过以下方式来完成初始化的配置layer.config({path:&nbsp;&#39;/res/layer/&#39;&nbsp;//layer.js所在的目录，可以是绝对目录，也可以是相对目录});</pre><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">注意：<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\"><a style=\"color: rgb(1, 170, 237);\">如果采用 layui 加载 layer，无需设置 path。所以前置工作都是自动完成。</a></em></p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">但layer.config的作用远不止上述这样。它还可以配置层<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">默认的基础参数</em>，如：</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.codelayer.config({anim:&nbsp;1,&nbsp;//默认动画风格skin:&nbsp;&#39;layui-layer-molv&#39;&nbsp;//默认皮肤…});//除此之外，extend还允许你加载拓展的css皮肤，如：layer.config({//如果是独立版的layer，则将myskin存放在./skin目录下//如果是layui中使用layer，则将myskin存放在./css/modules/layer目录下extend:&nbsp;&#39;myskin/style.css&#39;});//具体的皮肤定制，可以参见：skin参数说明</pre></li><p><a style=\"color: rgb(51, 51, 51);\">layer.ready(callback)</a>&nbsp;- 初始化就绪</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">由于我们的layer内置了轻量级加载器，所以你根本不需要单独引入css等文件。但是加载总是需要过程的。当你在页面一打开就要执行弹层时，你最好是将弹层放入ready方法中，如：</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code//页面一打开就执行弹层layer.ready(function(){layer.msg(&#39;很高兴一开场就见到你&#39;);});</pre><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 10px 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px; color: rgb(153, 153, 153);\">我是华丽的酱油：介绍完上面两位引导者，接下来我们真正的主角闪亮登场了。此处应有掌声 ^,^</p></li><p><a style=\"color: rgb(51, 51, 51);\">layer.open(options)</a>&nbsp;- 原始核心方法</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">基本上是露脸率最高的方法，不管是使用哪种方式创建层，都是走<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">layer.open()</em>，创建任何类型的弹层都会返回一个当前层索引，上述的<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">options即是基础参数</em>，另外，该文档<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">统一采用options作为基础参数的标识</em>例子：</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.codevar&nbsp;index&nbsp;=&nbsp;layer.open({content:&nbsp;&#39;test&#39;});//拿到的index是一个重要的凭据，它是诸如layer.close(index)等方法的必传参数。</pre><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px; color: rgb(153, 153, 153);\">噢，请等等，上面这位主角的介绍篇幅怎么看怎么都觉得跟它的地位不符，作者在文档中只给了它如此可怜的一块地？？这是因为，它真的已经大众得不能再大众了，你真正需要了解的，是它的内部器官，即上面一大篇幅介绍的各种基础参数。 ←_←</p></li><p><a style=\"color: rgb(51, 51, 51);\">layer.alert(content, options, yes)</a>&nbsp;- 普通信息框</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">它的弹出似乎显得有些高调，一般用于对用户造成比较强烈的关注，类似系统alert，但却比alert更灵便。它的参数是自动向左补齐的。通过第二个参数，可以设定各种你所需要的基础参数，但如果你不需要的话，直接写回调即可。如</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code//eg1layer.alert(&#39;只想简单的提示&#39;);//eg2layer.alert(&#39;加了个图标&#39;,&nbsp;{icon:&nbsp;1});&nbsp;//这时如果你也还想执行yes回调，可以放在第三个参数中。//eg3layer.alert(&#39;有了回调&#39;,&nbsp;function(index){//do&nbsp;somethinglayer.close(index);});</pre></li><p><a style=\"color: rgb(51, 51, 51);\">layer.confirm(content, options, yes, cancel)</a>&nbsp;- 询问框</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">类似系统confirm，但却远胜confirm，另外它<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">不是和系统的confirm一样阻塞</em>你需要把交互的语句放在回调体中。同样的，它的参数也是自动补齐的。</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code//eg1layer.confirm(&#39;is&nbsp;not?&#39;,&nbsp;{icon:&nbsp;3,&nbsp;title:&#39;提示&#39;},&nbsp;function(index){//do&nbsp;somethinglayer.close(index);});//eg2layer.confirm(&#39;is&nbsp;not?&#39;,&nbsp;function(index){//do&nbsp;somethinglayer.close(index);});</pre></li><p><a style=\"color: rgb(51, 51, 51);\">layer.msg(content, options, end)</a>&nbsp;- 提示框</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">我们在源码中用了相对较大的篇幅来定制了这个msg，目的是想将其打造成露脸率最高的提示框。而事实上我的确也在大量地使用它。因为它简单，而且足够得自觉，它不仅占据很少的面积，而且默认还会3秒后<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">自动消失</em>所有这一切都决定了我对msg的爱。因此<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">我赋予了它许多可能</em>在外形方面，它坚持简陋的变化，在作用方面，它坚持零用户操作。而且它的参数也是自动补齐的。</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code//eg1layer.msg(&#39;只想弱弱提示&#39;);//eg2layer.msg(&#39;有表情地提示&#39;,&nbsp;{icon:&nbsp;6});//eg3layer.msg(&#39;关闭后想做些什么&#39;,&nbsp;function(){//do&nbsp;something});//eglayer.msg(&#39;同上&#39;,&nbsp;{icon:&nbsp;1,time:&nbsp;2000&nbsp;//2秒关闭（如果不配置，默认是3秒）},&nbsp;function(){//do&nbsp;something});</pre></li><p><a style=\"color: rgb(51, 51, 51);\">layer.load(icon, options)</a>&nbsp;- 加载层</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">type:3的深度定制。load并不需要你传太多的参数，但如果你不喜欢默认的加载风格，你还有选择空间。icon支持传入<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">0-2</em>如果是0，无需传。另外特别注意一点：<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">load默认是不会自动关闭的</em>，因为你一般会在ajax回调体中关闭它。</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code//eg1var&nbsp;index&nbsp;=&nbsp;layer.load();//eg2var&nbsp;index&nbsp;=&nbsp;layer.load(1);&nbsp;//换了种风格//eg3var&nbsp;index&nbsp;=&nbsp;layer.load(2,&nbsp;{time:&nbsp;10*1000});&nbsp;//又换了种风格，并且设定最长等待10秒//关闭layer.close(index);</pre></li><p><a style=\"color: rgb(51, 51, 51);\">layer.tips(content, follow, options)</a>&nbsp;- tips层</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">type:4的深度定制。也是我本人比较喜欢的一个层类型，因为它拥有和msg一样的低调和自觉，而且会<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">智能定位</em>，即灵活地判断它应该出现在哪边。默认是在元素右边弹出</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code//eg1layer.tips(&#39;只想提示地精准些&#39;,&nbsp;&#39;#id&#39;);//eg&nbsp;2$(&#39;#id&#39;).on(&#39;click&#39;,&nbsp;function(){var&nbsp;that&nbsp;=&nbsp;this;layer.tips(&#39;只想提示地精准些&#39;,&nbsp;that);&nbsp;//在元素的事件回调体中，follow直接赋予this即可});//eg&nbsp;3layer.tips(&#39;在上面&#39;,&nbsp;&#39;#id&#39;,&nbsp;{tips:&nbsp;1});</pre></li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 0px 10px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); color: rgb(153, 153, 153);\">上面主要是一些弹层的调用方式，而下面介绍的是一些辅助性的方法</p><p><a style=\"color: rgb(51, 51, 51);\">layer.close(index)</a>&nbsp;- 关闭特定层</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">关于它似乎没有太多介绍的必要，唯一让你疑惑的，可能就是这个<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">index</em>了吧。事实上它非常容易得到。</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code//当你想关闭当前页的某个层时var&nbsp;index&nbsp;=&nbsp;layer.open();var&nbsp;index&nbsp;=&nbsp;layer.alert();var&nbsp;index&nbsp;=&nbsp;layer.load();var&nbsp;index&nbsp;=&nbsp;layer.tips();//正如你看到的，每一种弹层调用方式，都会返回一个indexlayer.close(index);&nbsp;//此时你只需要把获得的index，轻轻地赋予layer.close即可//如果你想关闭最新弹出的层，直接获取layer.index即可layer.close(layer.index);&nbsp;//它获取的始终是最新弹出的某个层，值是由layer内部动态递增计算的//当你在iframe页面关闭自身时var&nbsp;index&nbsp;=&nbsp;parent.layer.getFrameIndex(window.name);&nbsp;//先得到当前iframe层的索引parent.layer.close(index);&nbsp;//再执行关闭</pre></li><p><a style=\"color: rgb(51, 51, 51);\">layer.closeAll(type)</a>&nbsp;- 关闭所有层</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">如果你很懒，你<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">不想去获取index</em>你只想关闭。那么closeAll真的可以帮上你。如果你不指向层类型的话，它会销毁掉当前页所有的layer层。当然，如果你只想关闭某个类型的层，那么你可以</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.codelayer.closeAll();&nbsp;//疯狂模式，关闭所有层layer.closeAll(&#39;dialog&#39;);&nbsp;//关闭信息框layer.closeAll(&#39;page&#39;);&nbsp;//关闭所有页面层layer.closeAll(&#39;iframe&#39;);&nbsp;//关闭所有的iframe层layer.closeAll(&#39;loading&#39;);&nbsp;//关闭加载层layer.closeAll(&#39;tips&#39;);&nbsp;//关闭所有的tips层</pre></li><p><a style=\"color: rgb(51, 51, 51);\">layer.style(index, cssStyle)</a>&nbsp;- 重新定义层的样式</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">该方法对loading层和tips层无效。参数index为层的索引，cssStyle允许你传入任意的css属性</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code//重新给指定层设定width、top等layer.style(index,&nbsp;{width:&nbsp;&#39;1000px&#39;,top:&nbsp;&#39;10px&#39;});</pre></li><p><a style=\"color: rgb(51, 51, 51);\">layer.title(title, index)</a>&nbsp;- 改变层的标题</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">使用方式：<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">layer.title(&#39;标题变了&#39;, index)</em></p></li><p><a style=\"color: rgb(51, 51, 51);\">layer.getChildFrame(selector, index)</a>&nbsp;- 获取iframe页的DOM</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">当你试图在当前页获取iframe页的DOM元素时，你可以用此方法。<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">selector即iframe页的选择器</em></p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.codelayer.open({type:&nbsp;2,content:&nbsp;&#39;test/iframe.html&#39;,success:&nbsp;function(layero,&nbsp;index){var&nbsp;body&nbsp;=&nbsp;layer.getChildFrame(&#39;body&#39;,&nbsp;index);var&nbsp;iframeWin&nbsp;=&nbsp;window[layero.find(&#39;iframe&#39;)[0][&#39;name&#39;]];&nbsp;//得到iframe页的窗口对象，执行iframe页的方法：iframeWin.method();console.log(body.html())&nbsp;//得到iframe页的body内容body.find(&#39;input&#39;).val(&#39;Hi，我是从父页来的&#39;)}});</pre></li><p><a style=\"color: rgb(51, 51, 51);\">layer.getFrameIndex(windowName)</a>&nbsp;- 获取特定iframe层的索引</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">此方法一般用于在iframe页关闭自身时用到。</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code//假设这是iframe页var&nbsp;index&nbsp;=&nbsp;parent.layer.getFrameIndex(window.name);&nbsp;//先得到当前iframe层的索引parent.layer.close(index);&nbsp;//再执行关闭</pre></li><p><a style=\"color: rgb(51, 51, 51);\">layer.iframeAuto(index)</a>&nbsp;- 指定iframe层自适应</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">调用该方法时，iframe层的高度会重新进行适应</p></li><p><a style=\"color: rgb(51, 51, 51);\">layer.iframeSrc(index, url)</a>&nbsp;- //重置特定iframe url</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">似乎不怎么常用的样子。使用方式：<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">layer.iframeSrc(index, &#39;http://sentsin.com&#39;)</em></p></li><p><a style=\"color: rgb(51, 51, 51);\">layer.setTop(layero)</a>&nbsp;-置顶当前窗口</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">非常强大的一个方法，虽然一般很少用。但是当你的页面有很多很多layer窗口，你需要像Window窗体那样，点击某个窗口，该窗体就置顶在上面，那么setTop可以来轻松实现。它采用巧妙的逻辑，以使这种置顶的性能达到最优</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code//通过这种方式弹出的层，每当它被选择，就会置顶。layer.open({type:&nbsp;2,shade:&nbsp;false,area:&nbsp;&#39;500px&#39;,maxmin:&nbsp;true,content:&nbsp;&#39;http://www.layui.com&#39;,zIndex:&nbsp;layer.zIndex,&nbsp;//重点1success:&nbsp;function(layero){layer.setTop(layero);&nbsp;//重点2}});</pre></li><p><a style=\"color: rgb(51, 51, 51);\">layer.full()、layer.min()、layer.restore()</a>&nbsp;- 手工执行最大小化</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">（这三个酱油又一次被并列 ==。）一般用于在自定义元素上触发最大化、最小化和全屏。</p></li></ul><blockquote class=\"layui-elem-quote\" style=\"margin: 0px 0px 10px; padding: 15px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px; border-left: 5px solid rgb(0, 150, 136); border-radius: 0px 2px 2px 0px; background-color: rgb(242, 242, 242); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, 微软雅黑, Tahoma, Arial, sans-serif; font-size: 14px; white-space: normal;\">请注意，从2.3开始，无需通过layer.config来加载拓展模块。如果您是之前版本，则需通过下述方式来加载</blockquote><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.codelayer.config({extend:&nbsp;&#39;extend/layer.ext.js&#39;});</pre><ul style=\"margin: 0px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, 微软雅黑, Tahoma, Arial, sans-serif; font-size: 14px; white-space: normal;\" class=\" list-paddingleft-2\"><p><a style=\"color: rgb(51, 51, 51);\">layer.prompt(options, yes)</a>&nbsp;- 输入层</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">prompt的参数也是向前补齐的。options不仅可支持传入基础参数，还可以传入prompt专用的属性。当然，也可以不传。yes携带<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">value 表单值</em><em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">index 索引</em><em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">elem 表单元素</em></p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code//prompt层新定制的成员如下{formType:&nbsp;1,&nbsp;//输入框类型，支持0（文本）默认1（密码）2（多行文本）value:&nbsp;&#39;&#39;,&nbsp;//初始时的值，默认空字符maxlength:&nbsp;140,&nbsp;//可输入文本的最大长度，默认500}//例子1layer.prompt(function(value,&nbsp;index,&nbsp;elem){alert(value);&nbsp;//得到valuelayer.close(index);});//例子2layer.prompt({formType:&nbsp;2,value:&nbsp;&#39;初始值&#39;,title:&nbsp;&#39;请输入值&#39;,area:&nbsp;[&#39;800px&#39;,&nbsp;&#39;350px&#39;]&nbsp;//自定义文本域宽高},&nbsp;function(value,&nbsp;index,&nbsp;elem){alert(value);&nbsp;//得到valuelayer.close(index);});</pre></li><p><a style=\"color: rgb(51, 51, 51);\">layer.tab(options)</a>&nbsp;- tab层</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">tab层只单独定制了一个成员，即<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">tab: []</em>，这个好像没有什么可介绍的，简单粗暴看例子</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.codelayer.tab({area:&nbsp;[&#39;600px&#39;,&nbsp;&#39;300px&#39;],tab:&nbsp;[{title:&nbsp;&#39;TAB1&#39;,content:&nbsp;&#39;内容1&#39;},&nbsp;{title:&nbsp;&#39;TAB2&#39;,content:&nbsp;&#39;内容2&#39;},&nbsp;{title:&nbsp;&#39;TAB3&#39;,content:&nbsp;&#39;内容3&#39;}]});</pre></li><p><a style=\"color: rgb(51, 51, 51);\">layer.photos(options)</a>&nbsp;- 相册层</p><li><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">相册层，也可以称之为图片查看器。它的出场动画从layer内置的动画类型中随机展现。photos支持传入json和直接读取页面图片两种方式。如果是json传入，如下：</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code$.getJSON(&#39;/jquery/layer/test/photos.json&#39;,&nbsp;function(json){layer.photos({photos:&nbsp;json,anim:&nbsp;5&nbsp;//0-6的选择，指定弹出图片动画类型，默认随机（请注意，3.0之前的版本用shift参数）});});//而返回的json需严格按照如下格式：codelayui.code{&quot;title&quot;:&nbsp;&quot;&quot;,&nbsp;//相册标题&quot;id&quot;:&nbsp;123,&nbsp;//相册id&quot;start&quot;:&nbsp;0,&nbsp;//初始显示的图片序号，默认0&quot;data&quot;:&nbsp;[&nbsp;&nbsp;&nbsp;//相册包含的图片，数组格式{&quot;alt&quot;:&nbsp;&quot;图片名&quot;,&quot;pid&quot;:&nbsp;666,&nbsp;//图片id&quot;src&quot;:&nbsp;&quot;&quot;,&nbsp;//原图地址&quot;thumb&quot;:&nbsp;&quot;&quot;&nbsp;//缩略图地址}]}</pre><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">如果是直接从页面中获取图片，那么需要指向图片的父容器，并且你的img可以设定一些规定的属性（但不是必须的）。</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.code//HTML示例&lt;div&nbsp;id=&quot;layer-photos-demo&quot;&nbsp;class=&quot;layer-photos-demo&quot;&gt;&lt;img&nbsp;layer-pid=&quot;图片id，可以不写&quot;&nbsp;layer-src=&quot;大图地址&quot;&nbsp;src=&quot;缩略图&quot;&nbsp;alt=&quot;图片名&quot;&gt;&lt;img&nbsp;layer-pid=&quot;图片id，可以不写&quot;&nbsp;layer-src=&quot;大图地址&quot;&nbsp;src=&quot;缩略图&quot;&nbsp;alt=&quot;图片名&quot;&gt;&lt;/div&gt;&lt;script&gt;//调用示例layer.photos({photos:&nbsp;&#39;#layer-photos-demo&#39;,anim:&nbsp;5&nbsp;//0-6的选择，指定弹出图片动画类型，默认随机（请注意，3.0之前的版本用shift参数）});&lt;/script&gt;</pre><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">看看一个实例呗：</p><p><img src=\"http://res.layui.com/images/fly/fly.jpg\" alt=\"说好的，一起Fly\"/>&nbsp;<img src=\"http://res.layui.com/images/fly/layim.jpg\" alt=\"LayIM\"/>&nbsp;<img src=\"http://file.ynet.com/2/1603/09/10995825.jpg\" alt=\"凤姐是个好人\"/>&nbsp;<img src=\"http://res.layui.com/images/sentsin/night.gif\" alt=\"星空如此深邃\"/></p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">第二种方式的图片查看器显然更加简单，因为无需像第一种那样返回规定的json，但是他们还是有各自的应用场景的，你可以按照你的需求进行选择。另外，photos还有个tab回调，切换图片时触发。</p><pre class=\"layui-code layui-box layui-code-view\" style=\"margin-top: 10px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); white-space: pre-wrap; word-wrap: break-word; box-sizing: content-box; position: relative; line-height: 20px; border-width: 1px 1px 1px 6px; border-style: solid; border-color: rgb(226, 226, 226); border-image: initial; background-color: rgb(242, 242, 242); color: rgb(51, 51, 51); font-family: &quot;Courier New&quot;; font-size: 12px;\">codelayui.codelayer.photos({photos:&nbsp;json/选择器,tab:&nbsp;function(pic,&nbsp;layero){console.log(pic)&nbsp;//当前图片的一些信息}});</pre></li></ul><p>结语</p><p style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); line-height: 22px;\">合理地设定基础参数，合理地选择内置方法，合理的心态，合理地阅读，只要一切都在合理的前提下，你才会感知到layer许许多多令人愉悦的地方，<em style=\"padding: 0px 3px; color: rgb(102, 102, 102);\">她真的是否如你所愿，取决于你对她了解的深远</em>。愿layer能给你的web开发带来一段美妙的旅程。别忘了在线调试。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\">Layui - 用心与你沟通</p><p><br/></p>', '21,23,25', '1', '1', '/resource/blog/article/2018-04-17/53c94c7cdba442dfaf50c683122fc232.png', '1', '2018-04-16 20:54:12', '2018-05-06 09:29:28', '1', null, '19', '0', '1', '34', '0', 'http://www.layui.com/doc/modules/layer.html');
INSERT INTO `tb_blog_article` VALUES ('1523929620163', '音频视频测试', '测试。。。。。。', '<p><img src=\"/resource/blog/article/2018-04-17/df878ce554f845d29deef5fa1c5caad8.jpg\" title=\"\" alt=\"\" width=\"258\" height=\"285\"/></p><p><br/></p><p><img src=\"/resource/blog/article/2018-04-17/9313f1c21d2246578a9fa3c5425901f5.jpeg\"/></p><p><img src=\"/resource/blog/article/2018-04-17/e85e80bd0d6f44c882f05464fc25d3ed.jpg\"/></p><p><img src=\"/resource/blog/article/2018-04-17/84e9cc73b31c4ee190b5f5246cc754ca.jpg\"/></p><p style=\"line-height: 16px;\"><img src=\"http://7n4iip.natappfree.cc/commons/ueditor/dialogs/attachment/fileTypeImages/icon_doc.gif\"/><a href=\"/resource/blog/article/2018-04-17/eab786a1543145568caad17aa203663a.doc\" target=\"_blank\" title=\"eab786a1543145568caad17aa203663a.doc\">简历下载</a></p><p><img width=\"530\" height=\"340\" src=\"http://api.map.baidu.com/staticimage?center=114.336026,23.090517&zoom=11&width=530&height=340&markers=114.370485,22.985357\"/></p><p><video class=\"edui-upload-video  vjs-default-skin                 video-js\" controls=\"\" preload=\"none\" width=\"420\" height=\"50\" src=\"/resource/blog/article/2018-04-17/3e2550d944e34b869f5582e494020c39.mp3\"><source src=\"/resource/blog/article/2018-04-17/3e2550d944e34b869f5582e494020c39.mp3\" type=\"video/mp3\"/></video></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong><span style=\"color: rgb(255, 0, 0);\">回忆的沙漏-邓紫棋</span></strong></p><p><br/></p><p style=\"line-height: 16px;\"><img style=\"vertical-align: middle; margin-right: 2px;\" src=\"http://localhost:8080/commons/ueditor/dialogs/attachment/fileTypeImages/icon_pdf.gif\"/><a href=\"/resource/blog/article/2018-04-17/c6239bf1394048988c24947355f83d24.pdf\" target=\"_blank\" title=\"c6239bf1394048988c24947355f83d24.pdf\">个人简历</a></p><p><br/></p><p><span style=\"font-size: 20px;\"><strong><span style=\"font-style: italic; font-weight: bold; line-height: 18px;\">视频设置</span></strong></span></p><p style=\"text-align:center\"><strong><span style=\"font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;\"><video class=\"edui-upload-video  vjs-default-skin             video-js\" controls=\"\" preload=\"none\" width=\"420\" height=\"280\" src=\"/resource/blog/article/2018-04-17/d312f702be404bdebbb4abafc103ce10.mp4\"><source src=\"/resource/blog/article/2018-04-17/d312f702be404bdebbb4abafc103ce10.mp4\" type=\"video/mp4\"/></video></span></strong></p><p style=\"text-align: center;\"><strong><span style=\"font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;\">io流教程</span></strong><br/></p><p><br/></p><pre class=\"brush:java;toolbar:false\">/**\r\n&nbsp;*&nbsp;上传接口\r\n&nbsp;*&nbsp;@param&nbsp;upfile\r\n&nbsp;*&nbsp;@return\r\n&nbsp;*/\r\n@RequestMapping(&quot;uploadThumbPic.do&quot;)\r\n@ResponseBody\r\npublic&nbsp;Object&nbsp;uploadThumbPic(MultipartFile&nbsp;upfile,String&nbsp;type,String&nbsp;flag){\r\n&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;rootPath=&nbsp;Config.uploadUrlRoot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;articlePath=Config.articleUrl;\r\n&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;imgtype=upfile.getOriginalFilename().substring(upfile.getOriginalFilename().lastIndexOf(&quot;.&quot;));\r\n&nbsp;&nbsp;&nbsp;&nbsp;//获取文件名\r\n&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;fileName&nbsp;=&nbsp;UUID.randomUUID().toString().replace(&quot;-&quot;,&quot;&quot;)+imgtype;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//日期作为目录&nbsp;每天生成一个目录\r\n&nbsp;&nbsp;&nbsp;&nbsp;SimpleDateFormat&nbsp;simpleDateFormat=new&nbsp;SimpleDateFormat(&quot;yyyy-MM-dd&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;date&nbsp;=&nbsp;simpleDateFormat.format(new&nbsp;Date());\r\n&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;dir=new&nbsp;File(rootPath+articlePath+&quot;/&quot;+date);\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!dir.exists()){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dir.mkdirs();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;SaveFile=new&nbsp;File(dir,&quot;/&quot;+fileName);\r\n&nbsp;&nbsp;&nbsp;&nbsp;ResultData&nbsp;resultData=new&nbsp;ResultData();\r\n&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//更改缩略图大小\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(flag!=null&nbsp;&amp;&amp;&nbsp;flag.equals(&quot;true&quot;)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Thumbnails.of(upfile.getInputStream()).size(300,200).toFile(SaveFile);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//保存文件\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upfile.transferTo(SaveFile);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(IOException&nbsp;e)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;ResultUtil().createErrorResult(&quot;upload&nbsp;error&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;url=Config.webResourceUrl+Config.articleUrl+&quot;/&quot;+date+&quot;/&quot;+fileName;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;if(&nbsp;type!=null){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//富文本上传\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UMeditorData&nbsp;uMeditorData=new&nbsp;UMeditorData();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uMeditorData.setName(fileName);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uMeditorData.setOriginalName(upfile.getOriginalFilename());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uMeditorData.setSize(upfile.getSize());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uMeditorData.setType(imgtype);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uMeditorData.setState(&quot;SUCCESS&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uMeditorData.setUrl(url);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;uMeditorData;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;Thumb&nbsp;thumb=new&nbsp;Thumb();\r\n&nbsp;&nbsp;&nbsp;&nbsp;thumb.setSrc(url);\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;ResultUtil&lt;Thumb&gt;().createSuccessResult(&quot;upload&nbsp;success&quot;,thumb);\r\n}</pre><p><br/></p><p><br/></p><p><br/></p><p><br/></p>', '21,26', '1', '1', '/resource/blog/article/2018-04-28/ebc707202301408caccf643e00b294cb.jpg', '1', '2018-04-17 09:47:00', '2018-05-06 09:25:58', '1', null, '61', '0', '1', '36', '1', '');
INSERT INTO `tb_blog_article` VALUES ('1523930927080', ' 解决百度ueditor富文本编辑器不能插入视频的问题/src掉链/src清空，不能显示视频', '1.直接下载到的百度富文本编辑器当插入优酷/腾讯视频的时候会自动清掉src，不显示视频    造成这样的原因是:  百度富文本编辑器的过滤器xssFilter导致插入视频异常，编辑器在切换源码的过程中过滤掉img的_url属性（用来存储视频url）解决办法:1.1、在配置文件ueditor.config.js中，定位 //xss过滤白名单，即,whitList:{ }，对 img: 增加 “_url” 属性： 2、在下面的 video 标签后面新增3给标签，使Ueditor分别能支持embed标', '<p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\">1.</p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; white-space: pre;\"></span>直接下载到的百度富文本编辑器当插入优酷/腾讯视频的时候会自动清掉src，不显示视频</p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\">&nbsp; &nbsp; 造成这样的原因是:</p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\">&nbsp; 百度富文本编辑器的过滤器<span style=\"box-sizing: border-box; white-space: pre;\"><span style=\"box-sizing: border-box; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 25px;\">xssFilter导致插入视频异常，编辑器在切换源码的过程中过滤掉img的_url属性（用来存储视频url）</span></span></p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; white-space: pre;\"><span style=\"box-sizing: border-box; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 25px;\"><span style=\"box-sizing: border-box;\"></span></span></span></p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\">解决办法:</p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; white-space: pre;\"></span>1.</p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; white-space: pre;\"><span style=\"box-sizing: border-box; color: rgb(102, 102, 102); font-family: &quot;Microsoft YaHei&quot;; font-size: 15px; line-height: 26px;\">1、在配置文件ueditor.config.js中，定位 //xss过滤白名单，即,whitList:{ }，对 img: 增加 “_url” 属性：&nbsp;</span></span></p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://www.dede58.com/uploads/allimg/170108/1-1F10Q2422NZ.png\" alt=\"\" style=\"border: none; box-sizing: border-box; margin: 0px; max-width: 602px; cursor: zoom-in; max-height: 100%; height: auto;\"/><br/></p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 25px;\">2、在下面的 video 标签后面新增3给标签，使Ueditor分别能支持embed标签和iframe标签：</span><br/></p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 25px;\"><img src=\"http://www.dede58.com/uploads/allimg/170108/1-1F10Q24259510.png\" alt=\"\" style=\"border: none; box-sizing: border-box; margin: 0px; max-width: 100%; cursor: zoom-in; max-height: 100%;\"/><br/></span></p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\">&nbsp; 增加的代码如下:(记得在在video这行的最后加上逗号，不然会报错)</p><p style=\"margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; white-space: pre;\">source: [&#39;src&#39;, &#39;type&#39;],<br/>&nbsp;embed: [&#39;type&#39;, &#39;class&#39;, &#39;pluginspage&#39;, &#39;src&#39;, &#39;width&#39;, &#39;height&#39;, &#39;align&#39;, &#39;style&#39;, &#39;wmode&#39;, &#39;play&#39;, &nbsp;<br/>&nbsp; &nbsp; &nbsp; + &nbsp;&#39;autoplay&#39;,&#39;loop&#39;, &#39;menu&#39;, &#39;allowscriptaccess&#39;, &#39;allowfullscreen&#39;, &#39;controls&#39;, &#39;preload&#39;],<br/>&nbsp;iframe: [&#39;src&#39;, &#39;class&#39;, &#39;height&#39;, &#39;width&#39;, &#39;max-width&#39;, &#39;max-height&#39;, &#39;align&#39;, &#39;frameborder&#39;, &#39;allowfullscreen&#39;]</span></p><p><br/></p>', '21,22,24,25', '1', '1', '', '0', '2018-04-17 10:08:47', '2018-04-26 11:38:29', '1', null, '10', '0', '1', '32', '0', 'https://blog.csdn.net/qq_34787830/article/details/75092347');
INSERT INTO `tb_blog_article` VALUES ('1524017153095', '评论测试', '评论测试评论测试评论测试评论测试评论测试评论测试', '<p>评论测试评论测试评论测试评论测试评论测试评论测试评论测试评论测试评论测试</p>', '21', '1', '1', '/resource/blog/article/2018-05-06/17f25246c17d4f1fb9e841f75f51767c.png', '0', '2018-04-18 10:05:53', '2018-05-06 22:49:24', '1', null, '309', '0', '1', '37', '1', '');

-- ----------------------------
-- Table structure for tb_blog_category
-- ----------------------------
DROP TABLE IF EXISTS `tb_blog_category`;
CREATE TABLE `tb_blog_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=38 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of tb_blog_category
-- ----------------------------
INSERT INTO `tb_blog_category` VALUES ('28', 'java');
INSERT INTO `tb_blog_category` VALUES ('29', 'php');
INSERT INTO `tb_blog_category` VALUES ('32', 'web前端');
INSERT INTO `tb_blog_category` VALUES ('33', 'nba');
INSERT INTO `tb_blog_category` VALUES ('34', 'javaweb');
INSERT INTO `tb_blog_category` VALUES ('35', 'javaweb框架');
INSERT INTO `tb_blog_category` VALUES ('36', '视频分享');
INSERT INTO `tb_blog_category` VALUES ('37', '测试页面');

-- ----------------------------
-- Table structure for tb_blog_comment
-- ----------------------------
DROP TABLE IF EXISTS `tb_blog_comment`;
CREATE TABLE `tb_blog_comment` (
  `id` varchar(32) COLLATE utf8_unicode_ci NOT NULL,
  `type` int(11) DEFAULT NULL,
  `target_key` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `parent_id` varchar(32) COLLATE utf8_unicode_ci DEFAULT '',
  `root_id` varchar(32) COLLATE utf8_unicode_ci DEFAULT '',
  `content` text COLLATE utf8_unicode_ci,
  `status` int(11) DEFAULT '0',
  `visitor_name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `visitor_email` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `visitor_website` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `ip` varchar(32) COLLATE utf8_unicode_ci DEFAULT NULL,
  `comment_time` varchar(32) COLLATE utf8_unicode_ci DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of tb_blog_comment
-- ----------------------------
INSERT INTO `tb_blog_comment` VALUES ('0a75e73e6a514daaa490d26fce544ee9', '0', '1524017153095', '2a53761b47e6425e90297734b167abff', '2a53761b47e6425e90297734b167abff', '那你不是好棒棒', '0', null, null, null, null, '1525618024908', '1');
INSERT INTO `tb_blog_comment` VALUES ('122ab40c3d7b4a1eb22751acd0f79e49', '0', '1524017153095', 'b9ddfd91b2fa4de1b79476036eed58ce', 'b9ddfd91b2fa4de1b79476036eed58ce', '海！', '0', null, null, null, null, '1524814152832', '1');
INSERT INTO `tb_blog_comment` VALUES ('2a53761b47e6425e90297734b167abff', '0', '1524017153095', '', '', '备案好了啊啊', '0', '123', '', '', '127.0.0.1', '1524962085724', '2');
INSERT INTO `tb_blog_comment` VALUES ('673885ae49c743459d20172d5add3468', '0', '1523929620163', '6dee987d4ba74fc2b8c76dd65540a9bb', '6dee987d4ba74fc2b8c76dd65540a9bb', '1231', '0', null, null, null, null, '1524829696552', '1');
INSERT INTO `tb_blog_comment` VALUES ('6dee987d4ba74fc2b8c76dd65540a9bb', '0', '1523929620163', '', '', '[qq_148]', '0', '测试游客账号', '2295443695@qq.com', '', '0:0:0:0:0:0:0:1', '1524829673613', '2');
INSERT INTO `tb_blog_comment` VALUES ('74263f2719e343469ca61048aba13a6c', '0', '1524017153095', '', '', '11111', '0', '测试游客账号', '2295443695@qq.com', '', '0:0:0:0:0:0:0:1', '1524813413489', '2');
INSERT INTO `tb_blog_comment` VALUES ('82c01e76b355447c8c87a298b2aeb1e8', '0', '1524017153095', '', '', '1111', '0', '测试游客账号', '2295443695@qq.com', '', '0:0:0:0:0:0:0:1', '1524813410771', '2');
INSERT INTO `tb_blog_comment` VALUES ('b9ddfd91b2fa4de1b79476036eed58ce', '0', '1524017153095', '', '', '1111', '0', '测试游客账号', '2295443695@qq.com', '', '0:0:0:0:0:0:0:1', '1524813415647', '2');
INSERT INTO `tb_blog_comment` VALUES ('bee8cc93bc3e4edf8624179e1e34ca4b', '0', '1524017153095', '82c01e76b355447c8c87a298b2aeb1e8', '82c01e76b355447c8c87a298b2aeb1e8', '嗯', '0', null, null, null, null, '1524814168561', '1');
INSERT INTO `tb_blog_comment` VALUES ('e667ecf07e994ae1b7c2917159e1b3b7', '0', '1524017153095', '74263f2719e343469ca61048aba13a6c', '74263f2719e343469ca61048aba13a6c', '好啊', '0', null, null, null, null, '1524887549819', '1');

-- ----------------------------
-- Table structure for tb_blog_comment_zan
-- ----------------------------
DROP TABLE IF EXISTS `tb_blog_comment_zan`;
CREATE TABLE `tb_blog_comment_zan` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) DEFAULT NULL,
  `comment_id` varchar(32) COLLATE utf8_unicode_ci DEFAULT NULL,
  `create_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `ip` varchar(32) COLLATE utf8_unicode_ci DEFAULT NULL,
  `type` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=44 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of tb_blog_comment_zan
-- ----------------------------
INSERT INTO `tb_blog_comment_zan` VALUES ('40', null, '6dee987d4ba74fc2b8c76dd65540a9bb', '2018-04-27 19:48:24', '0:0:0:0:0:0:0:1', '0');
INSERT INTO `tb_blog_comment_zan` VALUES ('41', null, '2a53761b47e6425e90297734b167abff', '2018-05-05 22:39:26', '0:0:0:0:0:0:0:1', '0');
INSERT INTO `tb_blog_comment_zan` VALUES ('42', null, '0a75e73e6a514daaa490d26fce544ee9', '2018-05-06 22:47:40', '127.0.0.1', '0');
INSERT INTO `tb_blog_comment_zan` VALUES ('43', null, '2a53761b47e6425e90297734b167abff', '2018-05-06 22:47:41', '127.0.0.1', '0');

-- ----------------------------
-- Table structure for tb_blog_tag
-- ----------------------------
DROP TABLE IF EXISTS `tb_blog_tag`;
CREATE TABLE `tb_blog_tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `category_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of tb_blog_tag
-- ----------------------------
INSERT INTO `tb_blog_tag` VALUES ('15', '     nba季后赛', '0');
INSERT INTO `tb_blog_tag` VALUES ('16', '编程', '0');
INSERT INTO `tb_blog_tag` VALUES ('19', 'java教程', '0');
INSERT INTO `tb_blog_tag` VALUES ('20', '篮球', '0');
INSERT INTO `tb_blog_tag` VALUES ('21', '2018', '0');
INSERT INTO `tb_blog_tag` VALUES ('22', 'javaweb', '0');
INSERT INTO `tb_blog_tag` VALUES ('23', '框架', '0');
INSERT INTO `tb_blog_tag` VALUES ('24', '网站开发', '0');
INSERT INTO `tb_blog_tag` VALUES ('25', 'web前端教程', '0');
INSERT INTO `tb_blog_tag` VALUES ('26', '视频音频', '0');

-- ----------------------------
-- Table structure for tb_blog_user
-- ----------------------------
DROP TABLE IF EXISTS `tb_blog_user`;
CREATE TABLE `tb_blog_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `access_token` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,
  `open_id` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,
  `user_type` int(11) DEFAULT NULL,
  `avatar` varchar(256) COLLATE utf8_unicode_ci DEFAULT NULL,
  `gender` varchar(32) COLLATE utf8_unicode_ci DEFAULT NULL,
  `email` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `nickname` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `expired_time` varchar(32) COLLATE utf8_unicode_ci DEFAULT NULL,
  `create_time` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `address` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `year` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of tb_blog_user
-- ----------------------------
INSERT INTO `tb_blog_user` VALUES ('1', null, null, '3', '/admin/images/face.jpg', '男', '2295443695@qq.com', '简单', null, '2018-04-23 19:12:15', null, null);
INSERT INTO `tb_blog_user` VALUES ('2', null, null, '0', '/commons/comment/images/default_avatar.gif', null, null, '游客', null, '2018-04-23 19:33:26', null, null);
INSERT INTO `tb_blog_user` VALUES ('13', 'ED70A6ABCE43E6B763BD2BB17F13C55B', 'ED1755018E8EDB822F3A3E0FFE0A0CF0', '1', 'http://qzapp.qlogo.cn/qzapp/101470713/ED1755018E8EDB822F3A3E0FFE0A0CF0/100', '男', null, '简单', null, '2018-05-06 09:22:12', '广东惠州', '1998');

-- ----------------------------
-- Table structure for tb_test_test
-- ----------------------------
DROP TABLE IF EXISTS `tb_test_test`;
CREATE TABLE `tb_test_test` (
  `id` int(11) NOT NULL,
  `test` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of tb_test_test
-- ----------------------------
INSERT INTO `tb_test_test` VALUES ('1', '测试Test');

-- ----------------------------
-- Table structure for tb_user
-- ----------------------------
DROP TABLE IF EXISTS `tb_user`;
CREATE TABLE `tb_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `password` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of tb_user
-- ----------------------------
INSERT INTO `tb_user` VALUES ('1', 'xuzijia', '050322c4ebdd504ab10096e6e046b2ae');
